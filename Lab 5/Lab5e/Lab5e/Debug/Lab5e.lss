
Lab5e.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a5e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000dc  00802000  00000a5e  00000ad2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000bae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000be0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000c20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000053f6  00000000  00000000  00000cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003e48  00000000  00000000  000060b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008ce  00000000  00000000  00009efe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000023c  00000000  00000000  0000a7cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000033d4  00000000  00000000  0000aa08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000572  00000000  00000000  0000dddc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  0000e34e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  10:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  14:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  18:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  1c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  20:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  24:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  28:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  2c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  30:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  34:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  38:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__vector_14>
  3c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  40:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  44:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  48:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  4c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  50:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  54:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  58:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  5c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  60:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  64:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  68:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  6c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  70:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  74:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  78:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  7c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  80:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  84:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  88:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  8c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  90:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  94:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  98:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  9c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  fc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 100:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 104:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 108:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 10c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 110:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 114:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 118:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 11c:	0c 94 45 01 	jmp	0x28a	; 0x28a <__vector_71>
 120:	0c 94 5f 01 	jmp	0x2be	; 0x2be <__vector_72>
 124:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 128:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 12c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 130:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 134:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 138:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 13c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 140:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 144:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 148:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 14c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 150:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 154:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 158:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 15c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 160:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 164:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 168:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 16c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 170:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 174:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 178:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 17c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 180:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 184:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 188:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 18c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 190:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 194:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 198:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 19c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	ee e5       	ldi	r30, 0x5E	; 94
 21c:	fa e0       	ldi	r31, 0x0A	; 10
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	ac 3d       	cpi	r26, 0xDC	; 220
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59
 230:	0e 94 1f 03 	call	0x63e	; 0x63e <main>
 234:	0c 94 2d 05 	jmp	0xa5a	; 0xa5a <_exit>

00000238 <__bad_interrupt>:
 238:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000023c <Change_CLK_32HZ>:
extern const uint8_t INTCTRLA_CONFIG;
extern const uint8_t CLK_DIV_CONFIG;

void COUNTER_INIT(void){
	// SET top of counter
	TCC0.PER = TC_PER_CONFIG; 
 23c:	82 e0       	ldi	r24, 0x02	; 2
 23e:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
 242:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 246:	81 ff       	sbrs	r24, 1
 248:	fc cf       	rjmp	.-8      	; 0x242 <Change_CLK_32HZ+0x6>
 24a:	88 ed       	ldi	r24, 0xD8	; 216
 24c:	84 bf       	out	0x34, r24	; 52
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 254:	08 95       	ret

00000256 <ADC_INIT>:
 256:	83 e4       	ldi	r24, 0x43	; 67
 258:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
 25c:	e0 e0       	ldi	r30, 0x00	; 0
 25e:	f2 e0       	ldi	r31, 0x02	; 2
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	80 83       	st	Z, r24
 264:	84 e1       	ldi	r24, 0x14	; 20
 266:	81 83       	std	Z+1, r24	; 0x01
 268:	80 e3       	ldi	r24, 0x30	; 48
 26a:	82 83       	std	Z+2, r24	; 0x02
 26c:	97 e0       	ldi	r25, 0x07	; 7
 26e:	94 83       	std	Z+4, r25	; 0x04
 270:	83 e0       	ldi	r24, 0x03	; 3
 272:	80 a3       	std	Z+32, r24	; 0x20
 274:	2a e0       	ldi	r18, 0x0A	; 10
 276:	21 a3       	std	Z+33, r18	; 0x21
 278:	92 a3       	std	Z+34, r25	; 0x22
 27a:	80 a7       	std	Z+40, r24	; 0x28
 27c:	81 e2       	ldi	r24, 0x21	; 33
 27e:	81 a7       	std	Z+41, r24	; 0x29
 280:	8f e0       	ldi	r24, 0x0F	; 15
 282:	82 a7       	std	Z+42, r24	; 0x2a
 284:	10 8e       	std	Z+24, r1	; 0x18
 286:	11 8e       	std	Z+25, r1	; 0x19
 288:	08 95       	ret

0000028a <__vector_71>:
 28a:	1f 92       	push	r1
 28c:	0f 92       	push	r0
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	0f 92       	push	r0
 292:	11 24       	eor	r1, r1
 294:	08 b6       	in	r0, 0x38	; 56
 296:	0f 92       	push	r0
 298:	18 be       	out	0x38, r1	; 56
 29a:	8f 93       	push	r24
 29c:	80 e5       	ldi	r24, 0x50	; 80
 29e:	80 93 65 06 	sts	0x0665, r24	; 0x800665 <__TEXT_REGION_LENGTH__+0x700665>
 2a2:	80 e1       	ldi	r24, 0x10	; 16
 2a4:	80 93 66 06 	sts	0x0666, r24	; 0x800666 <__TEXT_REGION_LENGTH__+0x700666>
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	80 93 23 02 	sts	0x0223, r24	; 0x800223 <__TEXT_REGION_LENGTH__+0x700223>
 2ae:	8f 91       	pop	r24
 2b0:	0f 90       	pop	r0
 2b2:	08 be       	out	0x38, r0	; 56
 2b4:	0f 90       	pop	r0
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	0f 90       	pop	r0
 2ba:	1f 90       	pop	r1
 2bc:	18 95       	reti

000002be <__vector_72>:
 2be:	1f 92       	push	r1
 2c0:	0f 92       	push	r0
 2c2:	0f b6       	in	r0, 0x3f	; 63
 2c4:	0f 92       	push	r0
 2c6:	11 24       	eor	r1, r1
 2c8:	08 b6       	in	r0, 0x38	; 56
 2ca:	0f 92       	push	r0
 2cc:	18 be       	out	0x38, r1	; 56
 2ce:	8f 93       	push	r24
 2d0:	80 e5       	ldi	r24, 0x50	; 80
 2d2:	80 93 65 06 	sts	0x0665, r24	; 0x800665 <__TEXT_REGION_LENGTH__+0x700665>
 2d6:	80 e4       	ldi	r24, 0x40	; 64
 2d8:	80 93 66 06 	sts	0x0666, r24	; 0x800666 <__TEXT_REGION_LENGTH__+0x700666>
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <__TEXT_REGION_LENGTH__+0x70022b>
 2e2:	8f 91       	pop	r24
 2e4:	0f 90       	pop	r0
 2e6:	08 be       	out	0x38, r0	; 56
 2e8:	0f 90       	pop	r0
 2ea:	0f be       	out	0x3f, r0	; 63
 2ec:	0f 90       	pop	r0
 2ee:	1f 90       	pop	r1
 2f0:	18 95       	reti

000002f2 <USART_INIT>:
 2f2:	e0 e6       	ldi	r30, 0x60	; 96
 2f4:	f6 e0       	ldi	r31, 0x06	; 6
 2f6:	88 e0       	ldi	r24, 0x08	; 8
 2f8:	81 83       	std	Z+1, r24	; 0x01
 2fa:	85 83       	std	Z+5, r24	; 0x05
 2fc:	84 e0       	ldi	r24, 0x04	; 4
 2fe:	82 83       	std	Z+2, r24	; 0x02
 300:	88 e1       	ldi	r24, 0x18	; 24
 302:	80 93 a4 09 	sts	0x09A4, r24	; 0x8009a4 <__TEXT_REGION_LENGTH__+0x7009a4>
 306:	83 e0       	ldi	r24, 0x03	; 3
 308:	80 93 a5 09 	sts	0x09A5, r24	; 0x8009a5 <__TEXT_REGION_LENGTH__+0x7009a5>
 30c:	e0 ea       	ldi	r30, 0xA0	; 160
 30e:	f9 e0       	ldi	r31, 0x09	; 9
 310:	8e e8       	ldi	r24, 0x8E	; 142
 312:	86 83       	std	Z+6, r24	; 0x06
 314:	88 eb       	ldi	r24, 0xB8	; 184
 316:	87 83       	std	Z+7, r24	; 0x07
 318:	08 95       	ret

0000031a <OUT_CHAR>:
 31a:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <__TEXT_REGION_LENGTH__+0x7009a1>
 31e:	95 ff       	sbrs	r25, 5
 320:	fc cf       	rjmp	.-8      	; 0x31a <OUT_CHAR>
 322:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
 326:	08 95       	ret

00000328 <OUT_STRING>:
 328:	cf 93       	push	r28
 32a:	df 93       	push	r29
 32c:	ec 01       	movw	r28, r24
 32e:	89 91       	ld	r24, Y+
 330:	88 23       	and	r24, r24
 332:	19 f0       	breq	.+6      	; 0x33a <OUT_STRING+0x12>
 334:	0e 94 8d 01 	call	0x31a	; 0x31a <OUT_CHAR>
 338:	fa cf       	rjmp	.-12     	; 0x32e <OUT_STRING+0x6>
 33a:	df 91       	pop	r29
 33c:	cf 91       	pop	r28
 33e:	08 95       	ret

00000340 <IN_CHAR>:
 340:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <__TEXT_REGION_LENGTH__+0x7009a1>
 344:	87 ff       	sbrs	r24, 7
 346:	fc cf       	rjmp	.-8      	; 0x340 <IN_CHAR>
 348:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
 34c:	08 95       	ret

0000034e <volt_string>:
 34e:	2f 92       	push	r2
 350:	3f 92       	push	r3
 352:	4f 92       	push	r4
 354:	5f 92       	push	r5
 356:	6f 92       	push	r6
 358:	7f 92       	push	r7
 35a:	8f 92       	push	r8
 35c:	9f 92       	push	r9
 35e:	af 92       	push	r10
 360:	bf 92       	push	r11
 362:	cf 92       	push	r12
 364:	df 92       	push	r13
 366:	ef 92       	push	r14
 368:	ff 92       	push	r15
 36a:	0f 93       	push	r16
 36c:	1f 93       	push	r17
 36e:	cf 93       	push	r28
 370:	df 93       	push	r29
 372:	cd b7       	in	r28, 0x3d	; 61
 374:	de b7       	in	r29, 0x3e	; 62
 376:	60 97       	sbiw	r28, 0x10	; 16
 378:	cd bf       	out	0x3d, r28	; 61
 37a:	de bf       	out	0x3e, r29	; 62
 37c:	38 2e       	mov	r3, r24
 37e:	09 2f       	mov	r16, r25
 380:	16 2f       	mov	r17, r22
 382:	67 fd       	sbrc	r22, 7
 384:	61 95       	neg	r22
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	0e 94 34 04 	call	0x868	; 0x868 <__floatsisf>
 390:	2a e0       	ldi	r18, 0x0A	; 10
 392:	37 ed       	ldi	r19, 0xD7	; 215
 394:	43 ea       	ldi	r20, 0xA3	; 163
 396:	5c e3       	ldi	r21, 0x3C	; 60
 398:	0e 94 c0 04 	call	0x980	; 0x980 <__mulsf3>
 39c:	6b 01       	movw	r12, r22
 39e:	7c 01       	movw	r14, r24
 3a0:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fixsfsi>
 3a4:	4b 01       	movw	r8, r22
 3a6:	5c 01       	movw	r10, r24
 3a8:	26 2e       	mov	r2, r22
 3aa:	77 27       	eor	r23, r23
 3ac:	07 2e       	mov	r0, r23
 3ae:	00 0c       	add	r0, r0
 3b0:	88 0b       	sbc	r24, r24
 3b2:	99 0b       	sbc	r25, r25
 3b4:	0e 94 34 04 	call	0x868	; 0x868 <__floatsisf>
 3b8:	9b 01       	movw	r18, r22
 3ba:	ac 01       	movw	r20, r24
 3bc:	c7 01       	movw	r24, r14
 3be:	b6 01       	movw	r22, r12
 3c0:	0e 94 8f 03 	call	0x71e	; 0x71e <__subsf3>
 3c4:	20 e0       	ldi	r18, 0x00	; 0
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	40 e2       	ldi	r20, 0x20	; 32
 3ca:	51 e4       	ldi	r21, 0x41	; 65
 3cc:	0e 94 c0 04 	call	0x980	; 0x980 <__mulsf3>
 3d0:	2b 01       	movw	r4, r22
 3d2:	3c 01       	movw	r6, r24
 3d4:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fixsfsi>
 3d8:	6b 01       	movw	r12, r22
 3da:	7c 01       	movw	r14, r24
 3dc:	68 8b       	std	Y+16, r22	; 0x10
 3de:	77 27       	eor	r23, r23
 3e0:	07 2e       	mov	r0, r23
 3e2:	00 0c       	add	r0, r0
 3e4:	88 0b       	sbc	r24, r24
 3e6:	99 0b       	sbc	r25, r25
 3e8:	0e 94 34 04 	call	0x868	; 0x868 <__floatsisf>
 3ec:	9b 01       	movw	r18, r22
 3ee:	ac 01       	movw	r20, r24
 3f0:	c3 01       	movw	r24, r6
 3f2:	b2 01       	movw	r22, r4
 3f4:	0e 94 8f 03 	call	0x71e	; 0x71e <__subsf3>
 3f8:	20 e0       	ldi	r18, 0x00	; 0
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	40 e2       	ldi	r20, 0x20	; 32
 3fe:	51 e4       	ldi	r21, 0x41	; 65
 400:	0e 94 c0 04 	call	0x980	; 0x980 <__mulsf3>
 404:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__fixsfsi>
 408:	96 2f       	mov	r25, r22
 40a:	17 fd       	sbrc	r17, 7
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	8b e2       	ldi	r24, 0x2B	; 43
 410:	01 c0       	rjmp	.+2      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 412:	8d e2       	ldi	r24, 0x2D	; 45
 414:	89 83       	std	Y+1, r24	; 0x01
 416:	8f e0       	ldi	r24, 0x0F	; 15
 418:	82 15       	cp	r24, r2
 41a:	38 f0       	brcs	.+14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41c:	28 2d       	mov	r18, r8
 41e:	30 e0       	ldi	r19, 0x00	; 0
 420:	f9 01       	movw	r30, r18
 422:	e4 53       	subi	r30, 0x34	; 52
 424:	ff 4d       	sbci	r31, 0xDF	; 223
 426:	80 81       	ld	r24, Z
 428:	01 c0       	rjmp	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 42a:	80 e0       	ldi	r24, 0x00	; 0
 42c:	8a 83       	std	Y+2, r24	; 0x02
 42e:	8e e2       	ldi	r24, 0x2E	; 46
 430:	8b 83       	std	Y+3, r24	; 0x03
 432:	88 89       	ldd	r24, Y+16	; 0x10
 434:	80 31       	cpi	r24, 0x10	; 16
 436:	38 f4       	brcc	.+14     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 438:	2c 2d       	mov	r18, r12
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	f9 01       	movw	r30, r18
 43e:	e4 53       	subi	r30, 0x34	; 52
 440:	ff 4d       	sbci	r31, 0xDF	; 223
 442:	80 81       	ld	r24, Z
 444:	01 c0       	rjmp	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 446:	80 e0       	ldi	r24, 0x00	; 0
 448:	8c 83       	std	Y+4, r24	; 0x04
 44a:	90 31       	cpi	r25, 0x10	; 16
 44c:	30 f4       	brcc	.+12     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 44e:	e6 2f       	mov	r30, r22
 450:	f0 e0       	ldi	r31, 0x00	; 0
 452:	e4 53       	subi	r30, 0x34	; 52
 454:	ff 4d       	sbci	r31, 0xDF	; 223
 456:	80 81       	ld	r24, Z
 458:	01 c0       	rjmp	.+2      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	8d 83       	std	Y+5, r24	; 0x05
 45e:	80 e2       	ldi	r24, 0x20	; 32
 460:	8e 83       	std	Y+6, r24	; 0x06
 462:	96 e5       	ldi	r25, 0x56	; 86
 464:	9f 83       	std	Y+7, r25	; 0x07
 466:	88 87       	std	Y+8, r24	; 0x08
 468:	88 e2       	ldi	r24, 0x28	; 40
 46a:	89 87       	std	Y+9, r24	; 0x09
 46c:	e1 2f       	mov	r30, r17
 46e:	e2 95       	swap	r30
 470:	ef 70       	andi	r30, 0x0F	; 15
 472:	f0 e0       	ldi	r31, 0x00	; 0
 474:	e4 53       	subi	r30, 0x34	; 52
 476:	ff 4d       	sbci	r31, 0xDF	; 223
 478:	80 81       	ld	r24, Z
 47a:	8a 87       	std	Y+10, r24	; 0x0a
 47c:	1f 70       	andi	r17, 0x0F	; 15
 47e:	e1 2f       	mov	r30, r17
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	e4 53       	subi	r30, 0x34	; 52
 484:	ff 4d       	sbci	r31, 0xDF	; 223
 486:	80 81       	ld	r24, Z
 488:	8b 87       	std	Y+11, r24	; 0x0b
 48a:	89 e2       	ldi	r24, 0x29	; 41
 48c:	8c 87       	std	Y+12, r24	; 0x0c
 48e:	8d e0       	ldi	r24, 0x0D	; 13
 490:	8d 87       	std	Y+13, r24	; 0x0d
 492:	8a e0       	ldi	r24, 0x0A	; 10
 494:	8e 87       	std	Y+14, r24	; 0x0e
 496:	1f 86       	std	Y+15, r1	; 0x0f
 498:	de 01       	movw	r26, r28
 49a:	11 96       	adiw	r26, 0x01	; 1
 49c:	e3 2d       	mov	r30, r3
 49e:	f0 2f       	mov	r31, r16
 4a0:	ce 01       	movw	r24, r28
 4a2:	40 96       	adiw	r24, 0x10	; 16
 4a4:	2d 91       	ld	r18, X+
 4a6:	21 93       	st	Z+, r18
 4a8:	8a 17       	cp	r24, r26
 4aa:	9b 07       	cpc	r25, r27
 4ac:	d9 f7       	brne	.-10     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4ae:	60 96       	adiw	r28, 0x10	; 16
 4b0:	cd bf       	out	0x3d, r28	; 61
 4b2:	de bf       	out	0x3e, r29	; 62
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	1f 91       	pop	r17
 4ba:	0f 91       	pop	r16
 4bc:	ff 90       	pop	r15
 4be:	ef 90       	pop	r14
 4c0:	df 90       	pop	r13
 4c2:	cf 90       	pop	r12
 4c4:	bf 90       	pop	r11
 4c6:	af 90       	pop	r10
 4c8:	9f 90       	pop	r9
 4ca:	8f 90       	pop	r8
 4cc:	7f 90       	pop	r7
 4ce:	6f 90       	pop	r6
 4d0:	5f 90       	pop	r5
 4d2:	4f 90       	pop	r4
 4d4:	3f 90       	pop	r3
 4d6:	2f 90       	pop	r2
 4d8:	08 95       	ret

000004da <COUNTER_START>:
	return;
}

void COUNTER_START(void){
	//SET interupt for counter
	TCC0.INTCTRLA = INTCTRLA_CONFIG;
 4da:	e0 e0       	ldi	r30, 0x00	; 0
 4dc:	f8 e0       	ldi	r31, 0x08	; 8
 4de:	83 e0       	ldi	r24, 0x03	; 3
 4e0:	86 83       	std	Z+6, r24	; 0x06
	
	//Start COUNTER
	TCC0_CTRLA = CLK_DIV_CONFIG;
 4e2:	87 e0       	ldi	r24, 0x07	; 7
 4e4:	80 83       	st	Z, r24
 4e6:	08 95       	ret

000004e8 <COUNTER_STOP>:
}

void COUNTER_STOP(void){
	
	//STOP TIMER INTERRUPT
	TCC0.INTCTRLA = 0x00;
 4e8:	e0 e0       	ldi	r30, 0x00	; 0
 4ea:	f8 e0       	ldi	r31, 0x08	; 8
 4ec:	16 82       	std	Z+6, r1	; 0x06
	
	//STOP TIMER
	TCC0.CTRLA = 0x00;
 4ee:	10 82       	st	Z, r1
	
	//RESET TIMER
	TCC0_CTRLFCLR = TC_CMD_RESTART_gc;
 4f0:	88 e0       	ldi	r24, 0x08	; 8
 4f2:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x700808>
 4f6:	08 95       	ret

000004f8 <__vector_14>:
	
	return;
}


ISR(TCC0_OVF_vect){
 4f8:	1f 92       	push	r1
 4fa:	0f 92       	push	r0
 4fc:	0f b6       	in	r0, 0x3f	; 63
 4fe:	0f 92       	push	r0
 500:	11 24       	eor	r1, r1
 502:	08 b6       	in	r0, 0x38	; 56
 504:	0f 92       	push	r0
 506:	18 be       	out	0x38, r1	; 56
 508:	09 b6       	in	r0, 0x39	; 57
 50a:	0f 92       	push	r0
 50c:	19 be       	out	0x39, r1	; 57
 50e:	0a b6       	in	r0, 0x3a	; 58
 510:	0f 92       	push	r0
 512:	1a be       	out	0x3a, r1	; 58
 514:	0b b6       	in	r0, 0x3b	; 59
 516:	0f 92       	push	r0
 518:	1b be       	out	0x3b, r1	; 59
 51a:	2f 93       	push	r18
 51c:	3f 93       	push	r19
 51e:	4f 93       	push	r20
 520:	5f 93       	push	r21
 522:	6f 93       	push	r22
 524:	7f 93       	push	r23
 526:	8f 93       	push	r24
 528:	9f 93       	push	r25
 52a:	af 93       	push	r26
 52c:	bf 93       	push	r27
 52e:	ef 93       	push	r30
 530:	ff 93       	push	r31
 532:	cf 93       	push	r28
 534:	df 93       	push	r29
 536:	cd b7       	in	r28, 0x3d	; 61
 538:	de b7       	in	r29, 0x3e	; 62
 53a:	2f 97       	sbiw	r28, 0x0f	; 15
 53c:	cd bf       	out	0x3d, r28	; 61
 53e:	de bf       	out	0x3e, r29	; 62
	char c[15];
	
	ADCA.CH0.CTRL |= PIN7_bm;
 540:	e0 e0       	ldi	r30, 0x00	; 0
 542:	f2 e0       	ldi	r31, 0x02	; 2
 544:	80 a1       	ldd	r24, Z+32	; 0x20
 546:	80 68       	ori	r24, 0x80	; 128
 548:	80 a3       	std	Z+32, r24	; 0x20
	uint8_t x = ADCA.CH0.RESL;
 54a:	64 a1       	ldd	r22, Z+36	; 0x24
	
	//Display on terminal
	volt_string(c,x);
 54c:	ce 01       	movw	r24, r28
 54e:	01 96       	adiw	r24, 0x01	; 1
 550:	0e 94 a7 01 	call	0x34e	; 0x34e <volt_string>
	OUT_STRING("ISR: ");
 554:	80 e0       	ldi	r24, 0x00	; 0
 556:	90 e2       	ldi	r25, 0x20	; 32
 558:	0e 94 94 01 	call	0x328	; 0x328 <OUT_STRING>
	OUT_STRING(c);
 55c:	ce 01       	movw	r24, r28
 55e:	01 96       	adiw	r24, 0x01	; 1
 560:	0e 94 94 01 	call	0x328	; 0x328 <OUT_STRING>
}
 564:	2f 96       	adiw	r28, 0x0f	; 15
 566:	cd bf       	out	0x3d, r28	; 61
 568:	de bf       	out	0x3e, r29	; 62
 56a:	df 91       	pop	r29
 56c:	cf 91       	pop	r28
 56e:	ff 91       	pop	r31
 570:	ef 91       	pop	r30
 572:	bf 91       	pop	r27
 574:	af 91       	pop	r26
 576:	9f 91       	pop	r25
 578:	8f 91       	pop	r24
 57a:	7f 91       	pop	r23
 57c:	6f 91       	pop	r22
 57e:	5f 91       	pop	r21
 580:	4f 91       	pop	r20
 582:	3f 91       	pop	r19
 584:	2f 91       	pop	r18
 586:	0f 90       	pop	r0
 588:	0b be       	out	0x3b, r0	; 59
 58a:	0f 90       	pop	r0
 58c:	0a be       	out	0x3a, r0	; 58
 58e:	0f 90       	pop	r0
 590:	09 be       	out	0x39, r0	; 57
 592:	0f 90       	pop	r0
 594:	08 be       	out	0x38, r0	; 56
 596:	0f 90       	pop	r0
 598:	0f be       	out	0x3f, r0	; 63
 59a:	0f 90       	pop	r0
 59c:	1f 90       	pop	r1
 59e:	18 95       	reti

000005a0 <EBI_INIT>:
extern const uint8_t PORTK_CONFIG;


void EBI_INIT(void){
	// Set up EBI CTRL
	EBI.CTRL = ebi_ctrl_config;
 5a0:	e0 e4       	ldi	r30, 0x40	; 64
 5a2:	f4 e0       	ldi	r31, 0x04	; 4
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	80 83       	st	Z, r24
	
	//Set up EBI CHIP 0 and base address
	EBI.CS0.CTRLA = ebi_ctrla_config;
 5a8:	85 e1       	ldi	r24, 0x15	; 21
 5aa:	80 8b       	std	Z+16, r24	; 0x10
	EBI.CS0.BASEADDRH = ebi_baseaddlH_config;
 5ac:	13 8a       	std	Z+19, r1	; 0x13
	EBI.CS0.BASEADDRL = ebi_baseaddlL_config;
 5ae:	80 e8       	ldi	r24, 0x80	; 128
 5b0:	82 8b       	std	Z+18, r24	; 0x12

	//Set up PORT H
	PORTH_DIRSET = PORTH_CONFIG;
 5b2:	87 e1       	ldi	r24, 0x17	; 23
 5b4:	80 93 e1 06 	sts	0x06E1, r24	; 0x8006e1 <__TEXT_REGION_LENGTH__+0x7006e1>
	PORTH_OUTSET = PORTH_CONFIG; 
 5b8:	80 93 e5 06 	sts	0x06E5, r24	; 0x8006e5 <__TEXT_REGION_LENGTH__+0x7006e5>
	
	//Set up PORT K
	PORTK_DIRSET = PORTK_CONFIG;
 5bc:	8f ef       	ldi	r24, 0xFF	; 255
 5be:	80 93 21 07 	sts	0x0721, r24	; 0x800721 <__TEXT_REGION_LENGTH__+0x700721>
 5c2:	08 95       	ret

000005c4 <display_menu>:
		}
	}
	return 0;
}

void display_menu(void){
 5c4:	ef 92       	push	r14
 5c6:	ff 92       	push	r15
 5c8:	0f 93       	push	r16
 5ca:	1f 93       	push	r17
 5cc:	cf 93       	push	r28
 5ce:	df 93       	push	r29
 5d0:	cd b7       	in	r28, 0x3d	; 61
 5d2:	de b7       	in	r29, 0x3e	; 62
 5d4:	2c 97       	sbiw	r28, 0x0c	; 12
 5d6:	cd bf       	out	0x3d, r28	; 61
 5d8:	de bf       	out	0x3e, r29	; 62
	char *menuD = "D/d: Turn off timer\r\n";
	char *menuE = "E/e: Store CdS in SRAM\r\n";
	char *menuF = "F/f: Read/Display SRAM data\r\n";	
	
	//Set up array of menu strings
	char *menu[] = {menuA, menuB, menuC, menuD, menuE, menuF};
 5da:	86 e0       	ldi	r24, 0x06	; 6
 5dc:	90 e2       	ldi	r25, 0x20	; 32
 5de:	89 83       	std	Y+1, r24	; 0x01
 5e0:	9a 83       	std	Y+2, r25	; 0x02
 5e2:	82 e3       	ldi	r24, 0x32	; 50
 5e4:	90 e2       	ldi	r25, 0x20	; 32
 5e6:	8b 83       	std	Y+3, r24	; 0x03
 5e8:	9c 83       	std	Y+4, r25	; 0x04
 5ea:	85 e6       	ldi	r24, 0x65	; 101
 5ec:	90 e2       	ldi	r25, 0x20	; 32
 5ee:	8d 83       	std	Y+5, r24	; 0x05
 5f0:	9e 83       	std	Y+6, r25	; 0x06
 5f2:	8f e7       	ldi	r24, 0x7F	; 127
 5f4:	90 e2       	ldi	r25, 0x20	; 32
 5f6:	8f 83       	std	Y+7, r24	; 0x07
 5f8:	98 87       	std	Y+8, r25	; 0x08
 5fa:	85 e9       	ldi	r24, 0x95	; 149
 5fc:	90 e2       	ldi	r25, 0x20	; 32
 5fe:	89 87       	std	Y+9, r24	; 0x09
 600:	9a 87       	std	Y+10, r25	; 0x0a
 602:	8e ea       	ldi	r24, 0xAE	; 174
 604:	90 e2       	ldi	r25, 0x20	; 32
 606:	8b 87       	std	Y+11, r24	; 0x0b
 608:	9c 87       	std	Y+12, r25	; 0x0c
 60a:	8e 01       	movw	r16, r28
 60c:	0f 5f       	subi	r16, 0xFF	; 255
 60e:	1f 4f       	sbci	r17, 0xFF	; 255
 610:	7e 01       	movw	r14, r28
 612:	8d e0       	ldi	r24, 0x0D	; 13
 614:	e8 0e       	add	r14, r24
 616:	f1 1c       	adc	r15, r1
	
	//Loop thru menu array to display
	for(uint8_t i = 0; i < menu_size; i++){
		OUT_STRING(menu[i]);
 618:	f8 01       	movw	r30, r16
 61a:	81 91       	ld	r24, Z+
 61c:	91 91       	ld	r25, Z+
 61e:	8f 01       	movw	r16, r30
 620:	0e 94 94 01 	call	0x328	; 0x328 <OUT_STRING>
	
	//Set up array of menu strings
	char *menu[] = {menuA, menuB, menuC, menuD, menuE, menuF};
	
	//Loop thru menu array to display
	for(uint8_t i = 0; i < menu_size; i++){
 624:	0e 15       	cp	r16, r14
 626:	1f 05       	cpc	r17, r15
 628:	b9 f7       	brne	.-18     	; 0x618 <display_menu+0x54>
		OUT_STRING(menu[i]);
	}
	
	//return
	return;
 62a:	2c 96       	adiw	r28, 0x0c	; 12
 62c:	cd bf       	out	0x3d, r28	; 61
 62e:	de bf       	out	0x3e, r29	; 62
 630:	df 91       	pop	r29
 632:	cf 91       	pop	r28
 634:	1f 91       	pop	r17
 636:	0f 91       	pop	r16
 638:	ff 90       	pop	r15
 63a:	ef 90       	pop	r14
 63c:	08 95       	ret

0000063e <main>:
#include "EBI.h"

//Prototype
void display_menu(void);

int main(void){
 63e:	cf 93       	push	r28
 640:	df 93       	push	r29
 642:	cd b7       	in	r28, 0x3d	; 61
 644:	de b7       	in	r29, 0x3e	; 62
 646:	60 97       	sbiw	r28, 0x10	; 16
 648:	cd bf       	out	0x3d, r28	; 61
 64a:	de bf       	out	0x3e, r29	; 62
	//Set up program
	Change_CLK_32HZ();
 64c:	0e 94 1e 01 	call	0x23c	; 0x23c <Change_CLK_32HZ>
	USART_INIT();
 650:	0e 94 79 01 	call	0x2f2	; 0x2f2 <USART_INIT>
	ADC_INIT();
 654:	0e 94 2b 01 	call	0x256	; 0x256 <ADC_INIT>
extern const uint8_t INTCTRLA_CONFIG;
extern const uint8_t CLK_DIV_CONFIG;

void COUNTER_INIT(void){
	// SET top of counter
	TCC0.PER = TC_PER_CONFIG; 
 658:	80 e0       	ldi	r24, 0x00	; 0
 65a:	90 e8       	ldi	r25, 0x80	; 128
 65c:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
 660:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
	COUNTER_INIT();
	EBI_INIT();
 664:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <EBI_INIT>
	
	//Display Menu
	display_menu();
 668:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <display_menu>
	char c[15];
	volatile uint8_t x;
	volatile uint8_t *ptr1 = 0x8000;
	
	//TURN ON LED
	PORTD_DIRSET = (PIN4_bm | PIN6_bm);
 66c:	80 e5       	ldi	r24, 0x50	; 80
 66e:	80 93 61 06 	sts	0x0661, r24	; 0x800661 <__TEXT_REGION_LENGTH__+0x700661>
	PORTD_OUTSET =  0x50;
 672:	80 93 65 06 	sts	0x0665, r24	; 0x800665 <__TEXT_REGION_LENGTH__+0x700665>
	
	//Set up interrupts
	uint8_t PMIC_crtl_lvl_config = 0b00000111;
	PMIC_CTRL = PMIC_crtl_lvl_config;
 676:	87 e0       	ldi	r24, 0x07	; 7
 678:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
	sei();
 67c:	78 94       	sei
	
	
	
	while(TRUE){
		//Take user input
		c_in = IN_CHAR();	
 67e:	0e 94 a0 01 	call	0x340	; 0x340 <IN_CHAR>
		
		//Switch on choice
		switch(c_in){
 682:	86 34       	cpi	r24, 0x46	; 70
 684:	09 f4       	brne	.+2      	; 0x688 <main+0x4a>
 686:	48 c0       	rjmp	.+144    	; 0x718 <main+0xda>
 688:	68 f4       	brcc	.+26     	; 0x6a4 <main+0x66>
 68a:	83 34       	cpi	r24, 0x43	; 67
 68c:	99 f1       	breq	.+102    	; 0x6f4 <main+0xb6>
 68e:	28 f4       	brcc	.+10     	; 0x69a <main+0x5c>
 690:	81 34       	cpi	r24, 0x41	; 65
 692:	b1 f0       	breq	.+44     	; 0x6c0 <main+0x82>
 694:	82 34       	cpi	r24, 0x42	; 66
 696:	e1 f0       	breq	.+56     	; 0x6d0 <main+0x92>
 698:	f2 cf       	rjmp	.-28     	; 0x67e <main+0x40>
 69a:	84 34       	cpi	r24, 0x44	; 68
 69c:	71 f1       	breq	.+92     	; 0x6fa <main+0xbc>
 69e:	85 34       	cpi	r24, 0x45	; 69
 6a0:	79 f1       	breq	.+94     	; 0x700 <main+0xc2>
 6a2:	ed cf       	rjmp	.-38     	; 0x67e <main+0x40>
 6a4:	83 36       	cpi	r24, 0x63	; 99
 6a6:	31 f1       	breq	.+76     	; 0x6f4 <main+0xb6>
 6a8:	28 f4       	brcc	.+10     	; 0x6b4 <main+0x76>
 6aa:	81 36       	cpi	r24, 0x61	; 97
 6ac:	49 f0       	breq	.+18     	; 0x6c0 <main+0x82>
 6ae:	82 36       	cpi	r24, 0x62	; 98
 6b0:	79 f0       	breq	.+30     	; 0x6d0 <main+0x92>
 6b2:	e5 cf       	rjmp	.-54     	; 0x67e <main+0x40>
 6b4:	85 36       	cpi	r24, 0x65	; 101
 6b6:	21 f1       	breq	.+72     	; 0x700 <main+0xc2>
 6b8:	00 f1       	brcs	.+64     	; 0x6fa <main+0xbc>
 6ba:	86 36       	cpi	r24, 0x66	; 102
 6bc:	69 f1       	breq	.+90     	; 0x718 <main+0xda>
 6be:	df cf       	rjmp	.-66     	; 0x67e <main+0x40>
			//IF a
			case 'a':
			case 'A':
				//Start conversion on CdS Cell
				ADCA.CH0.CTRL |= PIN7_bm;
 6c0:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <__TEXT_REGION_LENGTH__+0x700220>
 6c4:	80 68       	ori	r24, 0x80	; 128
 6c6:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__TEXT_REGION_LENGTH__+0x700220>
				x = ADCA.CH0.RESL;
 6ca:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x700224>
 6ce:	07 c0       	rjmp	.+14     	; 0x6de <main+0xa0>
				break;
			//IF b
			case 'b':
			case 'B':
				//Start conversion on PINs for ch1
				ADCA.CH1.CTRL |= PIN7_bm;
 6d0:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <__TEXT_REGION_LENGTH__+0x700228>
 6d4:	80 68       	ori	r24, 0x80	; 128
 6d6:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <__TEXT_REGION_LENGTH__+0x700228>
				x = ADCA.CH1.RESL;
 6da:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <__TEXT_REGION_LENGTH__+0x70022c>
 6de:	88 8b       	std	Y+16, r24	; 0x10
				
				//Display on terminal
				volt_string(c,x);
 6e0:	68 89       	ldd	r22, Y+16	; 0x10
 6e2:	ce 01       	movw	r24, r28
 6e4:	01 96       	adiw	r24, 0x01	; 1
 6e6:	0e 94 a7 01 	call	0x34e	; 0x34e <volt_string>
				OUT_STRING(c);
 6ea:	ce 01       	movw	r24, r28
 6ec:	01 96       	adiw	r24, 0x01	; 1
 6ee:	0e 94 94 01 	call	0x328	; 0x328 <OUT_STRING>
				
				break;	
 6f2:	c5 cf       	rjmp	.-118    	; 0x67e <main+0x40>
			//If c
			case 'c':
			case 'C':
				//Start counter
				COUNTER_START();
 6f4:	0e 94 6d 02 	call	0x4da	; 0x4da <COUNTER_START>
				break;
 6f8:	c2 cf       	rjmp	.-124    	; 0x67e <main+0x40>
			//IF d
			case 'd':
			case 'D':
				//Stop counter
				COUNTER_STOP();
 6fa:	0e 94 74 02 	call	0x4e8	; 0x4e8 <COUNTER_STOP>
				break;
 6fe:	bf cf       	rjmp	.-130    	; 0x67e <main+0x40>
			//IF e
			case 'e':
			case 'E':
				//Get CdS ande store in SRAM
				ADCA.CH0.CTRL |= PIN7_bm;
 700:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <__TEXT_REGION_LENGTH__+0x700220>
 704:	80 68       	ori	r24, 0x80	; 128
 706:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__TEXT_REGION_LENGTH__+0x700220>
				x = ADCA.CH0.RESL;
 70a:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x700224>
 70e:	88 8b       	std	Y+16, r24	; 0x10
				*ptr1 = x;
 710:	88 89       	ldd	r24, Y+16	; 0x10
 712:	80 93 00 80 	sts	0x8000, r24	; 0x808000 <__data_end+0x5f24>
				break;
 716:	b3 cf       	rjmp	.-154    	; 0x67e <main+0x40>
			case 'f':
			case 'F':
				//Take SRAM vulue
				x = *ptr1;
 718:	80 91 00 80 	lds	r24, 0x8000	; 0x808000 <__data_end+0x5f24>
 71c:	e0 cf       	rjmp	.-64     	; 0x6de <main+0xa0>

0000071e <__subsf3>:
 71e:	50 58       	subi	r21, 0x80	; 128

00000720 <__addsf3>:
 720:	bb 27       	eor	r27, r27
 722:	aa 27       	eor	r26, r26
 724:	0e 94 a7 03 	call	0x74e	; 0x74e <__addsf3x>
 728:	0c 94 86 04 	jmp	0x90c	; 0x90c <__fp_round>
 72c:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__fp_pscA>
 730:	38 f0       	brcs	.+14     	; 0x740 <__addsf3+0x20>
 732:	0e 94 7f 04 	call	0x8fe	; 0x8fe <__fp_pscB>
 736:	20 f0       	brcs	.+8      	; 0x740 <__addsf3+0x20>
 738:	39 f4       	brne	.+14     	; 0x748 <__addsf3+0x28>
 73a:	9f 3f       	cpi	r25, 0xFF	; 255
 73c:	19 f4       	brne	.+6      	; 0x744 <__addsf3+0x24>
 73e:	26 f4       	brtc	.+8      	; 0x748 <__addsf3+0x28>
 740:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__fp_nan>
 744:	0e f4       	brtc	.+2      	; 0x748 <__addsf3+0x28>
 746:	e0 95       	com	r30
 748:	e7 fb       	bst	r30, 7
 74a:	0c 94 6f 04 	jmp	0x8de	; 0x8de <__fp_inf>

0000074e <__addsf3x>:
 74e:	e9 2f       	mov	r30, r25
 750:	0e 94 97 04 	call	0x92e	; 0x92e <__fp_split3>
 754:	58 f3       	brcs	.-42     	; 0x72c <__addsf3+0xc>
 756:	ba 17       	cp	r27, r26
 758:	62 07       	cpc	r22, r18
 75a:	73 07       	cpc	r23, r19
 75c:	84 07       	cpc	r24, r20
 75e:	95 07       	cpc	r25, r21
 760:	20 f0       	brcs	.+8      	; 0x76a <__addsf3x+0x1c>
 762:	79 f4       	brne	.+30     	; 0x782 <__addsf3x+0x34>
 764:	a6 f5       	brtc	.+104    	; 0x7ce <__addsf3x+0x80>
 766:	0c 94 b9 04 	jmp	0x972	; 0x972 <__fp_zero>
 76a:	0e f4       	brtc	.+2      	; 0x76e <__addsf3x+0x20>
 76c:	e0 95       	com	r30
 76e:	0b 2e       	mov	r0, r27
 770:	ba 2f       	mov	r27, r26
 772:	a0 2d       	mov	r26, r0
 774:	0b 01       	movw	r0, r22
 776:	b9 01       	movw	r22, r18
 778:	90 01       	movw	r18, r0
 77a:	0c 01       	movw	r0, r24
 77c:	ca 01       	movw	r24, r20
 77e:	a0 01       	movw	r20, r0
 780:	11 24       	eor	r1, r1
 782:	ff 27       	eor	r31, r31
 784:	59 1b       	sub	r21, r25
 786:	99 f0       	breq	.+38     	; 0x7ae <__addsf3x+0x60>
 788:	59 3f       	cpi	r21, 0xF9	; 249
 78a:	50 f4       	brcc	.+20     	; 0x7a0 <__addsf3x+0x52>
 78c:	50 3e       	cpi	r21, 0xE0	; 224
 78e:	68 f1       	brcs	.+90     	; 0x7ea <__addsf3x+0x9c>
 790:	1a 16       	cp	r1, r26
 792:	f0 40       	sbci	r31, 0x00	; 0
 794:	a2 2f       	mov	r26, r18
 796:	23 2f       	mov	r18, r19
 798:	34 2f       	mov	r19, r20
 79a:	44 27       	eor	r20, r20
 79c:	58 5f       	subi	r21, 0xF8	; 248
 79e:	f3 cf       	rjmp	.-26     	; 0x786 <__addsf3x+0x38>
 7a0:	46 95       	lsr	r20
 7a2:	37 95       	ror	r19
 7a4:	27 95       	ror	r18
 7a6:	a7 95       	ror	r26
 7a8:	f0 40       	sbci	r31, 0x00	; 0
 7aa:	53 95       	inc	r21
 7ac:	c9 f7       	brne	.-14     	; 0x7a0 <__addsf3x+0x52>
 7ae:	7e f4       	brtc	.+30     	; 0x7ce <__addsf3x+0x80>
 7b0:	1f 16       	cp	r1, r31
 7b2:	ba 0b       	sbc	r27, r26
 7b4:	62 0b       	sbc	r22, r18
 7b6:	73 0b       	sbc	r23, r19
 7b8:	84 0b       	sbc	r24, r20
 7ba:	ba f0       	brmi	.+46     	; 0x7ea <__addsf3x+0x9c>
 7bc:	91 50       	subi	r25, 0x01	; 1
 7be:	a1 f0       	breq	.+40     	; 0x7e8 <__addsf3x+0x9a>
 7c0:	ff 0f       	add	r31, r31
 7c2:	bb 1f       	adc	r27, r27
 7c4:	66 1f       	adc	r22, r22
 7c6:	77 1f       	adc	r23, r23
 7c8:	88 1f       	adc	r24, r24
 7ca:	c2 f7       	brpl	.-16     	; 0x7bc <__addsf3x+0x6e>
 7cc:	0e c0       	rjmp	.+28     	; 0x7ea <__addsf3x+0x9c>
 7ce:	ba 0f       	add	r27, r26
 7d0:	62 1f       	adc	r22, r18
 7d2:	73 1f       	adc	r23, r19
 7d4:	84 1f       	adc	r24, r20
 7d6:	48 f4       	brcc	.+18     	; 0x7ea <__addsf3x+0x9c>
 7d8:	87 95       	ror	r24
 7da:	77 95       	ror	r23
 7dc:	67 95       	ror	r22
 7de:	b7 95       	ror	r27
 7e0:	f7 95       	ror	r31
 7e2:	9e 3f       	cpi	r25, 0xFE	; 254
 7e4:	08 f0       	brcs	.+2      	; 0x7e8 <__addsf3x+0x9a>
 7e6:	b0 cf       	rjmp	.-160    	; 0x748 <__addsf3+0x28>
 7e8:	93 95       	inc	r25
 7ea:	88 0f       	add	r24, r24
 7ec:	08 f0       	brcs	.+2      	; 0x7f0 <__addsf3x+0xa2>
 7ee:	99 27       	eor	r25, r25
 7f0:	ee 0f       	add	r30, r30
 7f2:	97 95       	ror	r25
 7f4:	87 95       	ror	r24
 7f6:	08 95       	ret

000007f8 <__fixsfsi>:
 7f8:	0e 94 03 04 	call	0x806	; 0x806 <__fixunssfsi>
 7fc:	68 94       	set
 7fe:	b1 11       	cpse	r27, r1
 800:	0c 94 ba 04 	jmp	0x974	; 0x974 <__fp_szero>
 804:	08 95       	ret

00000806 <__fixunssfsi>:
 806:	0e 94 9f 04 	call	0x93e	; 0x93e <__fp_splitA>
 80a:	88 f0       	brcs	.+34     	; 0x82e <__fixunssfsi+0x28>
 80c:	9f 57       	subi	r25, 0x7F	; 127
 80e:	98 f0       	brcs	.+38     	; 0x836 <__fixunssfsi+0x30>
 810:	b9 2f       	mov	r27, r25
 812:	99 27       	eor	r25, r25
 814:	b7 51       	subi	r27, 0x17	; 23
 816:	b0 f0       	brcs	.+44     	; 0x844 <__fixunssfsi+0x3e>
 818:	e1 f0       	breq	.+56     	; 0x852 <__fixunssfsi+0x4c>
 81a:	66 0f       	add	r22, r22
 81c:	77 1f       	adc	r23, r23
 81e:	88 1f       	adc	r24, r24
 820:	99 1f       	adc	r25, r25
 822:	1a f0       	brmi	.+6      	; 0x82a <__fixunssfsi+0x24>
 824:	ba 95       	dec	r27
 826:	c9 f7       	brne	.-14     	; 0x81a <__fixunssfsi+0x14>
 828:	14 c0       	rjmp	.+40     	; 0x852 <__fixunssfsi+0x4c>
 82a:	b1 30       	cpi	r27, 0x01	; 1
 82c:	91 f0       	breq	.+36     	; 0x852 <__fixunssfsi+0x4c>
 82e:	0e 94 b9 04 	call	0x972	; 0x972 <__fp_zero>
 832:	b1 e0       	ldi	r27, 0x01	; 1
 834:	08 95       	ret
 836:	0c 94 b9 04 	jmp	0x972	; 0x972 <__fp_zero>
 83a:	67 2f       	mov	r22, r23
 83c:	78 2f       	mov	r23, r24
 83e:	88 27       	eor	r24, r24
 840:	b8 5f       	subi	r27, 0xF8	; 248
 842:	39 f0       	breq	.+14     	; 0x852 <__fixunssfsi+0x4c>
 844:	b9 3f       	cpi	r27, 0xF9	; 249
 846:	cc f3       	brlt	.-14     	; 0x83a <__fixunssfsi+0x34>
 848:	86 95       	lsr	r24
 84a:	77 95       	ror	r23
 84c:	67 95       	ror	r22
 84e:	b3 95       	inc	r27
 850:	d9 f7       	brne	.-10     	; 0x848 <__fixunssfsi+0x42>
 852:	3e f4       	brtc	.+14     	; 0x862 <__fixunssfsi+0x5c>
 854:	90 95       	com	r25
 856:	80 95       	com	r24
 858:	70 95       	com	r23
 85a:	61 95       	neg	r22
 85c:	7f 4f       	sbci	r23, 0xFF	; 255
 85e:	8f 4f       	sbci	r24, 0xFF	; 255
 860:	9f 4f       	sbci	r25, 0xFF	; 255
 862:	08 95       	ret

00000864 <__floatunsisf>:
 864:	e8 94       	clt
 866:	09 c0       	rjmp	.+18     	; 0x87a <__floatsisf+0x12>

00000868 <__floatsisf>:
 868:	97 fb       	bst	r25, 7
 86a:	3e f4       	brtc	.+14     	; 0x87a <__floatsisf+0x12>
 86c:	90 95       	com	r25
 86e:	80 95       	com	r24
 870:	70 95       	com	r23
 872:	61 95       	neg	r22
 874:	7f 4f       	sbci	r23, 0xFF	; 255
 876:	8f 4f       	sbci	r24, 0xFF	; 255
 878:	9f 4f       	sbci	r25, 0xFF	; 255
 87a:	99 23       	and	r25, r25
 87c:	a9 f0       	breq	.+42     	; 0x8a8 <__floatsisf+0x40>
 87e:	f9 2f       	mov	r31, r25
 880:	96 e9       	ldi	r25, 0x96	; 150
 882:	bb 27       	eor	r27, r27
 884:	93 95       	inc	r25
 886:	f6 95       	lsr	r31
 888:	87 95       	ror	r24
 88a:	77 95       	ror	r23
 88c:	67 95       	ror	r22
 88e:	b7 95       	ror	r27
 890:	f1 11       	cpse	r31, r1
 892:	f8 cf       	rjmp	.-16     	; 0x884 <__floatsisf+0x1c>
 894:	fa f4       	brpl	.+62     	; 0x8d4 <__floatsisf+0x6c>
 896:	bb 0f       	add	r27, r27
 898:	11 f4       	brne	.+4      	; 0x89e <__floatsisf+0x36>
 89a:	60 ff       	sbrs	r22, 0
 89c:	1b c0       	rjmp	.+54     	; 0x8d4 <__floatsisf+0x6c>
 89e:	6f 5f       	subi	r22, 0xFF	; 255
 8a0:	7f 4f       	sbci	r23, 0xFF	; 255
 8a2:	8f 4f       	sbci	r24, 0xFF	; 255
 8a4:	9f 4f       	sbci	r25, 0xFF	; 255
 8a6:	16 c0       	rjmp	.+44     	; 0x8d4 <__floatsisf+0x6c>
 8a8:	88 23       	and	r24, r24
 8aa:	11 f0       	breq	.+4      	; 0x8b0 <__floatsisf+0x48>
 8ac:	96 e9       	ldi	r25, 0x96	; 150
 8ae:	11 c0       	rjmp	.+34     	; 0x8d2 <__floatsisf+0x6a>
 8b0:	77 23       	and	r23, r23
 8b2:	21 f0       	breq	.+8      	; 0x8bc <__floatsisf+0x54>
 8b4:	9e e8       	ldi	r25, 0x8E	; 142
 8b6:	87 2f       	mov	r24, r23
 8b8:	76 2f       	mov	r23, r22
 8ba:	05 c0       	rjmp	.+10     	; 0x8c6 <__floatsisf+0x5e>
 8bc:	66 23       	and	r22, r22
 8be:	71 f0       	breq	.+28     	; 0x8dc <__floatsisf+0x74>
 8c0:	96 e8       	ldi	r25, 0x86	; 134
 8c2:	86 2f       	mov	r24, r22
 8c4:	70 e0       	ldi	r23, 0x00	; 0
 8c6:	60 e0       	ldi	r22, 0x00	; 0
 8c8:	2a f0       	brmi	.+10     	; 0x8d4 <__floatsisf+0x6c>
 8ca:	9a 95       	dec	r25
 8cc:	66 0f       	add	r22, r22
 8ce:	77 1f       	adc	r23, r23
 8d0:	88 1f       	adc	r24, r24
 8d2:	da f7       	brpl	.-10     	; 0x8ca <__floatsisf+0x62>
 8d4:	88 0f       	add	r24, r24
 8d6:	96 95       	lsr	r25
 8d8:	87 95       	ror	r24
 8da:	97 f9       	bld	r25, 7
 8dc:	08 95       	ret

000008de <__fp_inf>:
 8de:	97 f9       	bld	r25, 7
 8e0:	9f 67       	ori	r25, 0x7F	; 127
 8e2:	80 e8       	ldi	r24, 0x80	; 128
 8e4:	70 e0       	ldi	r23, 0x00	; 0
 8e6:	60 e0       	ldi	r22, 0x00	; 0
 8e8:	08 95       	ret

000008ea <__fp_nan>:
 8ea:	9f ef       	ldi	r25, 0xFF	; 255
 8ec:	80 ec       	ldi	r24, 0xC0	; 192
 8ee:	08 95       	ret

000008f0 <__fp_pscA>:
 8f0:	00 24       	eor	r0, r0
 8f2:	0a 94       	dec	r0
 8f4:	16 16       	cp	r1, r22
 8f6:	17 06       	cpc	r1, r23
 8f8:	18 06       	cpc	r1, r24
 8fa:	09 06       	cpc	r0, r25
 8fc:	08 95       	ret

000008fe <__fp_pscB>:
 8fe:	00 24       	eor	r0, r0
 900:	0a 94       	dec	r0
 902:	12 16       	cp	r1, r18
 904:	13 06       	cpc	r1, r19
 906:	14 06       	cpc	r1, r20
 908:	05 06       	cpc	r0, r21
 90a:	08 95       	ret

0000090c <__fp_round>:
 90c:	09 2e       	mov	r0, r25
 90e:	03 94       	inc	r0
 910:	00 0c       	add	r0, r0
 912:	11 f4       	brne	.+4      	; 0x918 <__fp_round+0xc>
 914:	88 23       	and	r24, r24
 916:	52 f0       	brmi	.+20     	; 0x92c <__fp_round+0x20>
 918:	bb 0f       	add	r27, r27
 91a:	40 f4       	brcc	.+16     	; 0x92c <__fp_round+0x20>
 91c:	bf 2b       	or	r27, r31
 91e:	11 f4       	brne	.+4      	; 0x924 <__fp_round+0x18>
 920:	60 ff       	sbrs	r22, 0
 922:	04 c0       	rjmp	.+8      	; 0x92c <__fp_round+0x20>
 924:	6f 5f       	subi	r22, 0xFF	; 255
 926:	7f 4f       	sbci	r23, 0xFF	; 255
 928:	8f 4f       	sbci	r24, 0xFF	; 255
 92a:	9f 4f       	sbci	r25, 0xFF	; 255
 92c:	08 95       	ret

0000092e <__fp_split3>:
 92e:	57 fd       	sbrc	r21, 7
 930:	90 58       	subi	r25, 0x80	; 128
 932:	44 0f       	add	r20, r20
 934:	55 1f       	adc	r21, r21
 936:	59 f0       	breq	.+22     	; 0x94e <__fp_splitA+0x10>
 938:	5f 3f       	cpi	r21, 0xFF	; 255
 93a:	71 f0       	breq	.+28     	; 0x958 <__fp_splitA+0x1a>
 93c:	47 95       	ror	r20

0000093e <__fp_splitA>:
 93e:	88 0f       	add	r24, r24
 940:	97 fb       	bst	r25, 7
 942:	99 1f       	adc	r25, r25
 944:	61 f0       	breq	.+24     	; 0x95e <__fp_splitA+0x20>
 946:	9f 3f       	cpi	r25, 0xFF	; 255
 948:	79 f0       	breq	.+30     	; 0x968 <__fp_splitA+0x2a>
 94a:	87 95       	ror	r24
 94c:	08 95       	ret
 94e:	12 16       	cp	r1, r18
 950:	13 06       	cpc	r1, r19
 952:	14 06       	cpc	r1, r20
 954:	55 1f       	adc	r21, r21
 956:	f2 cf       	rjmp	.-28     	; 0x93c <__fp_split3+0xe>
 958:	46 95       	lsr	r20
 95a:	f1 df       	rcall	.-30     	; 0x93e <__fp_splitA>
 95c:	08 c0       	rjmp	.+16     	; 0x96e <__fp_splitA+0x30>
 95e:	16 16       	cp	r1, r22
 960:	17 06       	cpc	r1, r23
 962:	18 06       	cpc	r1, r24
 964:	99 1f       	adc	r25, r25
 966:	f1 cf       	rjmp	.-30     	; 0x94a <__fp_splitA+0xc>
 968:	86 95       	lsr	r24
 96a:	71 05       	cpc	r23, r1
 96c:	61 05       	cpc	r22, r1
 96e:	08 94       	sec
 970:	08 95       	ret

00000972 <__fp_zero>:
 972:	e8 94       	clt

00000974 <__fp_szero>:
 974:	bb 27       	eor	r27, r27
 976:	66 27       	eor	r22, r22
 978:	77 27       	eor	r23, r23
 97a:	cb 01       	movw	r24, r22
 97c:	97 f9       	bld	r25, 7
 97e:	08 95       	ret

00000980 <__mulsf3>:
 980:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <__mulsf3x>
 984:	0c 94 86 04 	jmp	0x90c	; 0x90c <__fp_round>
 988:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__fp_pscA>
 98c:	38 f0       	brcs	.+14     	; 0x99c <__mulsf3+0x1c>
 98e:	0e 94 7f 04 	call	0x8fe	; 0x8fe <__fp_pscB>
 992:	20 f0       	brcs	.+8      	; 0x99c <__mulsf3+0x1c>
 994:	95 23       	and	r25, r21
 996:	11 f0       	breq	.+4      	; 0x99c <__mulsf3+0x1c>
 998:	0c 94 6f 04 	jmp	0x8de	; 0x8de <__fp_inf>
 99c:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__fp_nan>
 9a0:	11 24       	eor	r1, r1
 9a2:	0c 94 ba 04 	jmp	0x974	; 0x974 <__fp_szero>

000009a6 <__mulsf3x>:
 9a6:	0e 94 97 04 	call	0x92e	; 0x92e <__fp_split3>
 9aa:	70 f3       	brcs	.-36     	; 0x988 <__mulsf3+0x8>

000009ac <__mulsf3_pse>:
 9ac:	95 9f       	mul	r25, r21
 9ae:	c1 f3       	breq	.-16     	; 0x9a0 <__mulsf3+0x20>
 9b0:	95 0f       	add	r25, r21
 9b2:	50 e0       	ldi	r21, 0x00	; 0
 9b4:	55 1f       	adc	r21, r21
 9b6:	62 9f       	mul	r22, r18
 9b8:	f0 01       	movw	r30, r0
 9ba:	72 9f       	mul	r23, r18
 9bc:	bb 27       	eor	r27, r27
 9be:	f0 0d       	add	r31, r0
 9c0:	b1 1d       	adc	r27, r1
 9c2:	63 9f       	mul	r22, r19
 9c4:	aa 27       	eor	r26, r26
 9c6:	f0 0d       	add	r31, r0
 9c8:	b1 1d       	adc	r27, r1
 9ca:	aa 1f       	adc	r26, r26
 9cc:	64 9f       	mul	r22, r20
 9ce:	66 27       	eor	r22, r22
 9d0:	b0 0d       	add	r27, r0
 9d2:	a1 1d       	adc	r26, r1
 9d4:	66 1f       	adc	r22, r22
 9d6:	82 9f       	mul	r24, r18
 9d8:	22 27       	eor	r18, r18
 9da:	b0 0d       	add	r27, r0
 9dc:	a1 1d       	adc	r26, r1
 9de:	62 1f       	adc	r22, r18
 9e0:	73 9f       	mul	r23, r19
 9e2:	b0 0d       	add	r27, r0
 9e4:	a1 1d       	adc	r26, r1
 9e6:	62 1f       	adc	r22, r18
 9e8:	83 9f       	mul	r24, r19
 9ea:	a0 0d       	add	r26, r0
 9ec:	61 1d       	adc	r22, r1
 9ee:	22 1f       	adc	r18, r18
 9f0:	74 9f       	mul	r23, r20
 9f2:	33 27       	eor	r19, r19
 9f4:	a0 0d       	add	r26, r0
 9f6:	61 1d       	adc	r22, r1
 9f8:	23 1f       	adc	r18, r19
 9fa:	84 9f       	mul	r24, r20
 9fc:	60 0d       	add	r22, r0
 9fe:	21 1d       	adc	r18, r1
 a00:	82 2f       	mov	r24, r18
 a02:	76 2f       	mov	r23, r22
 a04:	6a 2f       	mov	r22, r26
 a06:	11 24       	eor	r1, r1
 a08:	9f 57       	subi	r25, 0x7F	; 127
 a0a:	50 40       	sbci	r21, 0x00	; 0
 a0c:	9a f0       	brmi	.+38     	; 0xa34 <__mulsf3_pse+0x88>
 a0e:	f1 f0       	breq	.+60     	; 0xa4c <__mulsf3_pse+0xa0>
 a10:	88 23       	and	r24, r24
 a12:	4a f0       	brmi	.+18     	; 0xa26 <__mulsf3_pse+0x7a>
 a14:	ee 0f       	add	r30, r30
 a16:	ff 1f       	adc	r31, r31
 a18:	bb 1f       	adc	r27, r27
 a1a:	66 1f       	adc	r22, r22
 a1c:	77 1f       	adc	r23, r23
 a1e:	88 1f       	adc	r24, r24
 a20:	91 50       	subi	r25, 0x01	; 1
 a22:	50 40       	sbci	r21, 0x00	; 0
 a24:	a9 f7       	brne	.-22     	; 0xa10 <__mulsf3_pse+0x64>
 a26:	9e 3f       	cpi	r25, 0xFE	; 254
 a28:	51 05       	cpc	r21, r1
 a2a:	80 f0       	brcs	.+32     	; 0xa4c <__mulsf3_pse+0xa0>
 a2c:	0c 94 6f 04 	jmp	0x8de	; 0x8de <__fp_inf>
 a30:	0c 94 ba 04 	jmp	0x974	; 0x974 <__fp_szero>
 a34:	5f 3f       	cpi	r21, 0xFF	; 255
 a36:	e4 f3       	brlt	.-8      	; 0xa30 <__mulsf3_pse+0x84>
 a38:	98 3e       	cpi	r25, 0xE8	; 232
 a3a:	d4 f3       	brlt	.-12     	; 0xa30 <__mulsf3_pse+0x84>
 a3c:	86 95       	lsr	r24
 a3e:	77 95       	ror	r23
 a40:	67 95       	ror	r22
 a42:	b7 95       	ror	r27
 a44:	f7 95       	ror	r31
 a46:	e7 95       	ror	r30
 a48:	9f 5f       	subi	r25, 0xFF	; 255
 a4a:	c1 f7       	brne	.-16     	; 0xa3c <__mulsf3_pse+0x90>
 a4c:	fe 2b       	or	r31, r30
 a4e:	88 0f       	add	r24, r24
 a50:	91 1d       	adc	r25, r1
 a52:	96 95       	lsr	r25
 a54:	87 95       	ror	r24
 a56:	97 f9       	bld	r25, 7
 a58:	08 95       	ret

00000a5a <_exit>:
 a5a:	f8 94       	cli

00000a5c <__stop_program>:
 a5c:	ff cf       	rjmp	.-2      	; 0xa5c <__stop_program>
