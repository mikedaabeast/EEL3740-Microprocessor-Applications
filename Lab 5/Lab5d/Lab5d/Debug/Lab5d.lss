
Lab5d.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007ce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00802000  000007ce  00000842  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000852  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000884  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004928  00000000  00000000  00000924  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003dc4  00000000  00000000  0000524c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006ce  00000000  00000000  00009010  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  000096e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002fa3  00000000  00000000  00009800  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000324  00000000  00000000  0000c7a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000cac7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  10:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  14:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  18:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  1c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  20:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  24:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  28:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  2c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  30:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  34:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  38:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  3c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  40:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  44:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  48:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  4c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  50:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  54:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  58:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  5c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  60:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  64:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  68:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  6c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  70:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  74:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  78:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  7c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  80:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  84:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  88:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  8c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  90:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  94:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  98:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  9c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  fc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 100:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 104:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 108:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 10c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 110:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 114:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 118:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 11c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 120:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 124:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 128:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 12c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 130:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 134:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 138:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 13c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 140:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 144:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 148:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 14c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 150:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 154:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 158:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 15c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 160:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 164:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 168:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 16c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 170:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 174:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 178:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 17c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 180:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 184:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 188:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 18c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 190:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 194:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 198:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 19c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	ee ec       	ldi	r30, 0xCE	; 206
 21c:	f7 e0       	ldi	r31, 0x07	; 7
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	a0 31       	cpi	r26, 0x10	; 16
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59
 230:	0e 94 2a 02 	call	0x454	; 0x454 <main>
 234:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <_exit>

00000238 <__bad_interrupt>:
 238:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000023c <Change_CLK_32HZ>:
		case 14: return 'E';
		case 15: return 'F';
	}
	// Return NULL if invalid number
	return NULL;
}
 23c:	82 e0       	ldi	r24, 0x02	; 2
 23e:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
 242:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 246:	81 ff       	sbrs	r24, 1
 248:	fc cf       	rjmp	.-8      	; 0x242 <Change_CLK_32HZ+0x6>
 24a:	88 ed       	ldi	r24, 0xD8	; 216
 24c:	84 bf       	out	0x34, r24	; 52
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 254:	08 95       	ret

00000256 <USART_INIT>:
 256:	e0 e6       	ldi	r30, 0x60	; 96
 258:	f6 e0       	ldi	r31, 0x06	; 6
 25a:	88 e0       	ldi	r24, 0x08	; 8
 25c:	81 83       	std	Z+1, r24	; 0x01
 25e:	85 83       	std	Z+5, r24	; 0x05
 260:	84 e0       	ldi	r24, 0x04	; 4
 262:	82 83       	std	Z+2, r24	; 0x02
 264:	88 e1       	ldi	r24, 0x18	; 24
 266:	80 93 a4 09 	sts	0x09A4, r24	; 0x8009a4 <__TEXT_REGION_LENGTH__+0x7009a4>
 26a:	83 e0       	ldi	r24, 0x03	; 3
 26c:	80 93 a5 09 	sts	0x09A5, r24	; 0x8009a5 <__TEXT_REGION_LENGTH__+0x7009a5>
 270:	e0 ea       	ldi	r30, 0xA0	; 160
 272:	f9 e0       	ldi	r31, 0x09	; 9
 274:	8e e8       	ldi	r24, 0x8E	; 142
 276:	86 83       	std	Z+6, r24	; 0x06
 278:	88 eb       	ldi	r24, 0xB8	; 184
 27a:	87 83       	std	Z+7, r24	; 0x07
 27c:	08 95       	ret

0000027e <OUT_CHAR>:
 27e:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <__TEXT_REGION_LENGTH__+0x7009a1>
 282:	95 ff       	sbrs	r25, 5
 284:	fc cf       	rjmp	.-8      	; 0x27e <OUT_CHAR>
 286:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
 28a:	08 95       	ret

0000028c <OUT_STRING>:
 28c:	cf 93       	push	r28
 28e:	df 93       	push	r29
 290:	ec 01       	movw	r28, r24
 292:	89 91       	ld	r24, Y+
 294:	88 23       	and	r24, r24
 296:	19 f0       	breq	.+6      	; 0x29e <OUT_STRING+0x12>
 298:	0e 94 3f 01 	call	0x27e	; 0x27e <OUT_CHAR>
 29c:	fa cf       	rjmp	.-12     	; 0x292 <OUT_STRING+0x6>
 29e:	df 91       	pop	r29
 2a0:	cf 91       	pop	r28
 2a2:	08 95       	ret

000002a4 <ADC_INIT>:
 2a4:	83 e4       	ldi	r24, 0x43	; 67
 2a6:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
 2aa:	e0 e0       	ldi	r30, 0x00	; 0
 2ac:	f2 e0       	ldi	r31, 0x02	; 2
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	80 83       	st	Z, r24
 2b2:	84 e1       	ldi	r24, 0x14	; 20
 2b4:	81 83       	std	Z+1, r24	; 0x01
 2b6:	80 e3       	ldi	r24, 0x30	; 48
 2b8:	82 83       	std	Z+2, r24	; 0x02
 2ba:	87 e0       	ldi	r24, 0x07	; 7
 2bc:	84 83       	std	Z+4, r24	; 0x04
 2be:	83 e0       	ldi	r24, 0x03	; 3
 2c0:	80 a7       	std	Z+40, r24	; 0x28
 2c2:	81 e2       	ldi	r24, 0x21	; 33
 2c4:	81 a7       	std	Z+41, r24	; 0x29
 2c6:	08 95       	ret

000002c8 <volt_string>:
/*********************Function**************************************
Function Name: volt_string
Inputs: char * c, uint8_t x
Outputs: No outputs
*/
void volt_string(char * c, uint8_t x){
 2c8:	2f 92       	push	r2
 2ca:	3f 92       	push	r3
 2cc:	4f 92       	push	r4
 2ce:	5f 92       	push	r5
 2d0:	6f 92       	push	r6
 2d2:	7f 92       	push	r7
 2d4:	8f 92       	push	r8
 2d6:	9f 92       	push	r9
 2d8:	af 92       	push	r10
 2da:	bf 92       	push	r11
 2dc:	cf 92       	push	r12
 2de:	df 92       	push	r13
 2e0:	ef 92       	push	r14
 2e2:	ff 92       	push	r15
 2e4:	0f 93       	push	r16
 2e6:	1f 93       	push	r17
 2e8:	cf 93       	push	r28
 2ea:	df 93       	push	r29
 2ec:	cd b7       	in	r28, 0x3d	; 61
 2ee:	de b7       	in	r29, 0x3e	; 62
 2f0:	60 97       	sbiw	r28, 0x10	; 16
 2f2:	cd bf       	out	0x3d, r28	; 61
 2f4:	de bf       	out	0x3e, r29	; 62
 2f6:	38 2e       	mov	r3, r24
 2f8:	09 2f       	mov	r16, r25
 2fa:	16 2f       	mov	r17, r22
	// Change to decimal form of signed num
	float f1;
	uint8_t y = x;
	
	if((x&PIN7_bm) == PIN7_bm){
		y = ((~(x))+1);
 2fc:	67 fd       	sbrc	r22, 7
 2fe:	61 95       	neg	r22
	}
	f1 = ((y*1.0)*0.02);
 300:	70 e0       	ldi	r23, 0x00	; 0
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__floatsisf>
 30a:	2a e0       	ldi	r18, 0x0A	; 10
 30c:	37 ed       	ldi	r19, 0xD7	; 215
 30e:	43 ea       	ldi	r20, 0xA3	; 163
 310:	5c e3       	ldi	r21, 0x3C	; 60
 312:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
 316:	6b 01       	movw	r12, r22
 318:	7c 01       	movw	r14, r24

	
	
	//Store first digit of f1
	uint8_t d1 = (uint8_t)((int)f1);
 31a:	0e 94 b4 02 	call	0x568	; 0x568 <__fixsfsi>
 31e:	4b 01       	movw	r8, r22
 320:	5c 01       	movw	r10, r24
 322:	26 2e       	mov	r2, r22
	
	//Bring digit 2 to front
	float f2 = 10.0*(f1-d1);
 324:	77 27       	eor	r23, r23
 326:	07 2e       	mov	r0, r23
 328:	00 0c       	add	r0, r0
 32a:	88 0b       	sbc	r24, r24
 32c:	99 0b       	sbc	r25, r25
 32e:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__floatsisf>
 332:	9b 01       	movw	r18, r22
 334:	ac 01       	movw	r20, r24
 336:	c7 01       	movw	r24, r14
 338:	b6 01       	movw	r22, r12
 33a:	0e 94 47 02 	call	0x48e	; 0x48e <__subsf3>
 33e:	20 e0       	ldi	r18, 0x00	; 0
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	40 e2       	ldi	r20, 0x20	; 32
 344:	51 e4       	ldi	r21, 0x41	; 65
 346:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
 34a:	2b 01       	movw	r4, r22
 34c:	3c 01       	movw	r6, r24
	
	//Store 2nd digit of f1
	uint8_t d2 = (uint8_t) ((int)f2);
 34e:	0e 94 b4 02 	call	0x568	; 0x568 <__fixsfsi>
 352:	6b 01       	movw	r12, r22
 354:	7c 01       	movw	r14, r24
 356:	68 8b       	std	Y+16, r22	; 0x10
	
	//Store 3rd digit of f1
	uint8_t d3 = (uint8_t) ((int) (10.0*(f2-d2)));
 358:	77 27       	eor	r23, r23
 35a:	07 2e       	mov	r0, r23
 35c:	00 0c       	add	r0, r0
 35e:	88 0b       	sbc	r24, r24
 360:	99 0b       	sbc	r25, r25
 362:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__floatsisf>
 366:	9b 01       	movw	r18, r22
 368:	ac 01       	movw	r20, r24
 36a:	c3 01       	movw	r24, r6
 36c:	b2 01       	movw	r22, r4
 36e:	0e 94 47 02 	call	0x48e	; 0x48e <__subsf3>
 372:	20 e0       	ldi	r18, 0x00	; 0
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	40 e2       	ldi	r20, 0x20	; 32
 378:	51 e4       	ldi	r21, 0x41	; 65
 37a:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__mulsf3>
 37e:	0e 94 b4 02 	call	0x568	; 0x568 <__fixsfsi>
 382:	96 2f       	mov	r25, r22
	
	//Make string with volt output
	char ca[] = { ((x & PIN7_bm) == PIN7_bm ? '-': '+'), int_to_char(d1),
 384:	17 fd       	sbrc	r17, 7
 386:	02 c0       	rjmp	.+4      	; 0x38c <volt_string+0xc4>
 388:	8b e2       	ldi	r24, 0x2B	; 43
 38a:	01 c0       	rjmp	.+2      	; 0x38e <volt_string+0xc6>
 38c:	8d e2       	ldi	r24, 0x2D	; 45
 38e:	89 83       	std	Y+1, r24	; 0x01
 390:	8f e0       	ldi	r24, 0x0F	; 15
 392:	82 15       	cp	r24, r2
 394:	38 f0       	brcs	.+14     	; 0x3a4 <volt_string+0xdc>
 396:	28 2d       	mov	r18, r8
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	f9 01       	movw	r30, r18
 39c:	e0 50       	subi	r30, 0x00	; 0
 39e:	f0 4e       	sbci	r31, 0xE0	; 224
 3a0:	80 81       	ld	r24, Z
 3a2:	01 c0       	rjmp	.+2      	; 0x3a6 <volt_string+0xde>
 3a4:	80 e0       	ldi	r24, 0x00	; 0
 3a6:	8a 83       	std	Y+2, r24	; 0x02
 3a8:	8e e2       	ldi	r24, 0x2E	; 46
 3aa:	8b 83       	std	Y+3, r24	; 0x03
 3ac:	88 89       	ldd	r24, Y+16	; 0x10
 3ae:	80 31       	cpi	r24, 0x10	; 16
 3b0:	38 f4       	brcc	.+14     	; 0x3c0 <volt_string+0xf8>
 3b2:	2c 2d       	mov	r18, r12
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	f9 01       	movw	r30, r18
 3b8:	e0 50       	subi	r30, 0x00	; 0
 3ba:	f0 4e       	sbci	r31, 0xE0	; 224
 3bc:	80 81       	ld	r24, Z
 3be:	01 c0       	rjmp	.+2      	; 0x3c2 <volt_string+0xfa>
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	8c 83       	std	Y+4, r24	; 0x04
 3c4:	90 31       	cpi	r25, 0x10	; 16
 3c6:	30 f4       	brcc	.+12     	; 0x3d4 <volt_string+0x10c>
 3c8:	e6 2f       	mov	r30, r22
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	e0 50       	subi	r30, 0x00	; 0
 3ce:	f0 4e       	sbci	r31, 0xE0	; 224
 3d0:	80 81       	ld	r24, Z
 3d2:	01 c0       	rjmp	.+2      	; 0x3d6 <volt_string+0x10e>
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	8d 83       	std	Y+5, r24	; 0x05
 3d8:	80 e2       	ldi	r24, 0x20	; 32
 3da:	8e 83       	std	Y+6, r24	; 0x06
 3dc:	96 e5       	ldi	r25, 0x56	; 86
 3de:	9f 83       	std	Y+7, r25	; 0x07
 3e0:	88 87       	std	Y+8, r24	; 0x08
 3e2:	88 e2       	ldi	r24, 0x28	; 40
 3e4:	89 87       	std	Y+9, r24	; 0x09
 3e6:	e1 2f       	mov	r30, r17
 3e8:	e2 95       	swap	r30
 3ea:	ef 70       	andi	r30, 0x0F	; 15
 3ec:	f0 e0       	ldi	r31, 0x00	; 0
 3ee:	e0 50       	subi	r30, 0x00	; 0
 3f0:	f0 4e       	sbci	r31, 0xE0	; 224
 3f2:	80 81       	ld	r24, Z
 3f4:	8a 87       	std	Y+10, r24	; 0x0a
 3f6:	1f 70       	andi	r17, 0x0F	; 15
 3f8:	e1 2f       	mov	r30, r17
 3fa:	f0 e0       	ldi	r31, 0x00	; 0
 3fc:	e0 50       	subi	r30, 0x00	; 0
 3fe:	f0 4e       	sbci	r31, 0xE0	; 224
 400:	80 81       	ld	r24, Z
 402:	8b 87       	std	Y+11, r24	; 0x0b
 404:	89 e2       	ldi	r24, 0x29	; 41
 406:	8c 87       	std	Y+12, r24	; 0x0c
 408:	8d e0       	ldi	r24, 0x0D	; 13
 40a:	8d 87       	std	Y+13, r24	; 0x0d
 40c:	8a e0       	ldi	r24, 0x0A	; 10
 40e:	8e 87       	std	Y+14, r24	; 0x0e
 410:	1f 86       	std	Y+15, r1	; 0x0f
 412:	de 01       	movw	r26, r28
 414:	11 96       	adiw	r26, 0x01	; 1
 416:	e3 2d       	mov	r30, r3
 418:	f0 2f       	mov	r31, r16
 41a:	ce 01       	movw	r24, r28
 41c:	40 96       	adiw	r24, 0x10	; 16
	};
	
	//Store string in char array passed in
	for(int i = 0; i < 15; i++){
		//store each char in order
		c[i] = ca[i];
 41e:	2d 91       	ld	r18, X+
 420:	21 93       	st	Z+, r18
		'.', int_to_char(d2), int_to_char(d3), ' ', 'V', ' ', '(',
		int_to_char((x >> 4) & 0x0F) ,int_to_char(x & 0x0F), ')', '\r', '\n',NULL
	};
	
	//Store string in char array passed in
	for(int i = 0; i < 15; i++){
 422:	8a 17       	cp	r24, r26
 424:	9b 07       	cpc	r25, r27
 426:	d9 f7       	brne	.-10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
		//store each char in order
		c[i] = ca[i];
	}
	//return
	return;
}
 428:	60 96       	adiw	r28, 0x10	; 16
 42a:	cd bf       	out	0x3d, r28	; 61
 42c:	de bf       	out	0x3e, r29	; 62
 42e:	df 91       	pop	r29
 430:	cf 91       	pop	r28
 432:	1f 91       	pop	r17
 434:	0f 91       	pop	r16
 436:	ff 90       	pop	r15
 438:	ef 90       	pop	r14
 43a:	df 90       	pop	r13
 43c:	cf 90       	pop	r12
 43e:	bf 90       	pop	r11
 440:	af 90       	pop	r10
 442:	9f 90       	pop	r9
 444:	8f 90       	pop	r8
 446:	7f 90       	pop	r7
 448:	6f 90       	pop	r6
 44a:	5f 90       	pop	r5
 44c:	4f 90       	pop	r4
 44e:	3f 90       	pop	r3
 450:	2f 90       	pop	r2
 452:	08 95       	ret

00000454 <main>:
#include "USART.h"
#include "constants.h"
#include "ADC.h"
#include "ATXMEGA_DISPLAY.h"

int main(void){
 454:	cf 93       	push	r28
 456:	df 93       	push	r29
 458:	cd b7       	in	r28, 0x3d	; 61
 45a:	de b7       	in	r29, 0x3e	; 62
 45c:	2f 97       	sbiw	r28, 0x0f	; 15
 45e:	cd bf       	out	0x3d, r28	; 61
 460:	de bf       	out	0x3e, r29	; 62
	
	Change_CLK_32HZ();
 462:	0e 94 1e 01 	call	0x23c	; 0x23c <Change_CLK_32HZ>
	USART_INIT();
 466:	0e 94 2b 01 	call	0x256	; 0x256 <USART_INIT>
	ADC_INIT();
 46a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <ADC_INIT>
	
	char c[15];
	uint8_t x;
	while(TRUE){
		ADCA.CH1.CTRL |= PIN7_bm;
 46e:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <__TEXT_REGION_LENGTH__+0x700228>
 472:	80 68       	ori	r24, 0x80	; 128
 474:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <__TEXT_REGION_LENGTH__+0x700228>
		x = ADCA.CH1.RESL;
 478:	60 91 2c 02 	lds	r22, 0x022C	; 0x80022c <__TEXT_REGION_LENGTH__+0x70022c>
		volt_string(c,x);
 47c:	ce 01       	movw	r24, r28
 47e:	01 96       	adiw	r24, 0x01	; 1
 480:	0e 94 64 01 	call	0x2c8	; 0x2c8 <volt_string>
		OUT_STRING(c);
 484:	ce 01       	movw	r24, r28
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	0e 94 46 01 	call	0x28c	; 0x28c <OUT_STRING>
 48c:	f0 cf       	rjmp	.-32     	; 0x46e <main+0x1a>

0000048e <__subsf3>:
 48e:	50 58       	subi	r21, 0x80	; 128

00000490 <__addsf3>:
 490:	bb 27       	eor	r27, r27
 492:	aa 27       	eor	r26, r26
 494:	0e 94 5f 02 	call	0x4be	; 0x4be <__addsf3x>
 498:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__fp_round>
 49c:	0e 94 30 03 	call	0x660	; 0x660 <__fp_pscA>
 4a0:	38 f0       	brcs	.+14     	; 0x4b0 <__addsf3+0x20>
 4a2:	0e 94 37 03 	call	0x66e	; 0x66e <__fp_pscB>
 4a6:	20 f0       	brcs	.+8      	; 0x4b0 <__addsf3+0x20>
 4a8:	39 f4       	brne	.+14     	; 0x4b8 <__addsf3+0x28>
 4aa:	9f 3f       	cpi	r25, 0xFF	; 255
 4ac:	19 f4       	brne	.+6      	; 0x4b4 <__addsf3+0x24>
 4ae:	26 f4       	brtc	.+8      	; 0x4b8 <__addsf3+0x28>
 4b0:	0c 94 2d 03 	jmp	0x65a	; 0x65a <__fp_nan>
 4b4:	0e f4       	brtc	.+2      	; 0x4b8 <__addsf3+0x28>
 4b6:	e0 95       	com	r30
 4b8:	e7 fb       	bst	r30, 7
 4ba:	0c 94 27 03 	jmp	0x64e	; 0x64e <__fp_inf>

000004be <__addsf3x>:
 4be:	e9 2f       	mov	r30, r25
 4c0:	0e 94 4f 03 	call	0x69e	; 0x69e <__fp_split3>
 4c4:	58 f3       	brcs	.-42     	; 0x49c <__addsf3+0xc>
 4c6:	ba 17       	cp	r27, r26
 4c8:	62 07       	cpc	r22, r18
 4ca:	73 07       	cpc	r23, r19
 4cc:	84 07       	cpc	r24, r20
 4ce:	95 07       	cpc	r25, r21
 4d0:	20 f0       	brcs	.+8      	; 0x4da <__addsf3x+0x1c>
 4d2:	79 f4       	brne	.+30     	; 0x4f2 <__addsf3x+0x34>
 4d4:	a6 f5       	brtc	.+104    	; 0x53e <__addsf3x+0x80>
 4d6:	0c 94 71 03 	jmp	0x6e2	; 0x6e2 <__fp_zero>
 4da:	0e f4       	brtc	.+2      	; 0x4de <__addsf3x+0x20>
 4dc:	e0 95       	com	r30
 4de:	0b 2e       	mov	r0, r27
 4e0:	ba 2f       	mov	r27, r26
 4e2:	a0 2d       	mov	r26, r0
 4e4:	0b 01       	movw	r0, r22
 4e6:	b9 01       	movw	r22, r18
 4e8:	90 01       	movw	r18, r0
 4ea:	0c 01       	movw	r0, r24
 4ec:	ca 01       	movw	r24, r20
 4ee:	a0 01       	movw	r20, r0
 4f0:	11 24       	eor	r1, r1
 4f2:	ff 27       	eor	r31, r31
 4f4:	59 1b       	sub	r21, r25
 4f6:	99 f0       	breq	.+38     	; 0x51e <__addsf3x+0x60>
 4f8:	59 3f       	cpi	r21, 0xF9	; 249
 4fa:	50 f4       	brcc	.+20     	; 0x510 <__addsf3x+0x52>
 4fc:	50 3e       	cpi	r21, 0xE0	; 224
 4fe:	68 f1       	brcs	.+90     	; 0x55a <__addsf3x+0x9c>
 500:	1a 16       	cp	r1, r26
 502:	f0 40       	sbci	r31, 0x00	; 0
 504:	a2 2f       	mov	r26, r18
 506:	23 2f       	mov	r18, r19
 508:	34 2f       	mov	r19, r20
 50a:	44 27       	eor	r20, r20
 50c:	58 5f       	subi	r21, 0xF8	; 248
 50e:	f3 cf       	rjmp	.-26     	; 0x4f6 <__addsf3x+0x38>
 510:	46 95       	lsr	r20
 512:	37 95       	ror	r19
 514:	27 95       	ror	r18
 516:	a7 95       	ror	r26
 518:	f0 40       	sbci	r31, 0x00	; 0
 51a:	53 95       	inc	r21
 51c:	c9 f7       	brne	.-14     	; 0x510 <__addsf3x+0x52>
 51e:	7e f4       	brtc	.+30     	; 0x53e <__addsf3x+0x80>
 520:	1f 16       	cp	r1, r31
 522:	ba 0b       	sbc	r27, r26
 524:	62 0b       	sbc	r22, r18
 526:	73 0b       	sbc	r23, r19
 528:	84 0b       	sbc	r24, r20
 52a:	ba f0       	brmi	.+46     	; 0x55a <__addsf3x+0x9c>
 52c:	91 50       	subi	r25, 0x01	; 1
 52e:	a1 f0       	breq	.+40     	; 0x558 <__addsf3x+0x9a>
 530:	ff 0f       	add	r31, r31
 532:	bb 1f       	adc	r27, r27
 534:	66 1f       	adc	r22, r22
 536:	77 1f       	adc	r23, r23
 538:	88 1f       	adc	r24, r24
 53a:	c2 f7       	brpl	.-16     	; 0x52c <__addsf3x+0x6e>
 53c:	0e c0       	rjmp	.+28     	; 0x55a <__addsf3x+0x9c>
 53e:	ba 0f       	add	r27, r26
 540:	62 1f       	adc	r22, r18
 542:	73 1f       	adc	r23, r19
 544:	84 1f       	adc	r24, r20
 546:	48 f4       	brcc	.+18     	; 0x55a <__addsf3x+0x9c>
 548:	87 95       	ror	r24
 54a:	77 95       	ror	r23
 54c:	67 95       	ror	r22
 54e:	b7 95       	ror	r27
 550:	f7 95       	ror	r31
 552:	9e 3f       	cpi	r25, 0xFE	; 254
 554:	08 f0       	brcs	.+2      	; 0x558 <__addsf3x+0x9a>
 556:	b0 cf       	rjmp	.-160    	; 0x4b8 <__addsf3+0x28>
 558:	93 95       	inc	r25
 55a:	88 0f       	add	r24, r24
 55c:	08 f0       	brcs	.+2      	; 0x560 <__addsf3x+0xa2>
 55e:	99 27       	eor	r25, r25
 560:	ee 0f       	add	r30, r30
 562:	97 95       	ror	r25
 564:	87 95       	ror	r24
 566:	08 95       	ret

00000568 <__fixsfsi>:
 568:	0e 94 bb 02 	call	0x576	; 0x576 <__fixunssfsi>
 56c:	68 94       	set
 56e:	b1 11       	cpse	r27, r1
 570:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__fp_szero>
 574:	08 95       	ret

00000576 <__fixunssfsi>:
 576:	0e 94 57 03 	call	0x6ae	; 0x6ae <__fp_splitA>
 57a:	88 f0       	brcs	.+34     	; 0x59e <__fixunssfsi+0x28>
 57c:	9f 57       	subi	r25, 0x7F	; 127
 57e:	98 f0       	brcs	.+38     	; 0x5a6 <__fixunssfsi+0x30>
 580:	b9 2f       	mov	r27, r25
 582:	99 27       	eor	r25, r25
 584:	b7 51       	subi	r27, 0x17	; 23
 586:	b0 f0       	brcs	.+44     	; 0x5b4 <__fixunssfsi+0x3e>
 588:	e1 f0       	breq	.+56     	; 0x5c2 <__fixunssfsi+0x4c>
 58a:	66 0f       	add	r22, r22
 58c:	77 1f       	adc	r23, r23
 58e:	88 1f       	adc	r24, r24
 590:	99 1f       	adc	r25, r25
 592:	1a f0       	brmi	.+6      	; 0x59a <__fixunssfsi+0x24>
 594:	ba 95       	dec	r27
 596:	c9 f7       	brne	.-14     	; 0x58a <__fixunssfsi+0x14>
 598:	14 c0       	rjmp	.+40     	; 0x5c2 <__fixunssfsi+0x4c>
 59a:	b1 30       	cpi	r27, 0x01	; 1
 59c:	91 f0       	breq	.+36     	; 0x5c2 <__fixunssfsi+0x4c>
 59e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__fp_zero>
 5a2:	b1 e0       	ldi	r27, 0x01	; 1
 5a4:	08 95       	ret
 5a6:	0c 94 71 03 	jmp	0x6e2	; 0x6e2 <__fp_zero>
 5aa:	67 2f       	mov	r22, r23
 5ac:	78 2f       	mov	r23, r24
 5ae:	88 27       	eor	r24, r24
 5b0:	b8 5f       	subi	r27, 0xF8	; 248
 5b2:	39 f0       	breq	.+14     	; 0x5c2 <__fixunssfsi+0x4c>
 5b4:	b9 3f       	cpi	r27, 0xF9	; 249
 5b6:	cc f3       	brlt	.-14     	; 0x5aa <__fixunssfsi+0x34>
 5b8:	86 95       	lsr	r24
 5ba:	77 95       	ror	r23
 5bc:	67 95       	ror	r22
 5be:	b3 95       	inc	r27
 5c0:	d9 f7       	brne	.-10     	; 0x5b8 <__fixunssfsi+0x42>
 5c2:	3e f4       	brtc	.+14     	; 0x5d2 <__fixunssfsi+0x5c>
 5c4:	90 95       	com	r25
 5c6:	80 95       	com	r24
 5c8:	70 95       	com	r23
 5ca:	61 95       	neg	r22
 5cc:	7f 4f       	sbci	r23, 0xFF	; 255
 5ce:	8f 4f       	sbci	r24, 0xFF	; 255
 5d0:	9f 4f       	sbci	r25, 0xFF	; 255
 5d2:	08 95       	ret

000005d4 <__floatunsisf>:
 5d4:	e8 94       	clt
 5d6:	09 c0       	rjmp	.+18     	; 0x5ea <__floatsisf+0x12>

000005d8 <__floatsisf>:
 5d8:	97 fb       	bst	r25, 7
 5da:	3e f4       	brtc	.+14     	; 0x5ea <__floatsisf+0x12>
 5dc:	90 95       	com	r25
 5de:	80 95       	com	r24
 5e0:	70 95       	com	r23
 5e2:	61 95       	neg	r22
 5e4:	7f 4f       	sbci	r23, 0xFF	; 255
 5e6:	8f 4f       	sbci	r24, 0xFF	; 255
 5e8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ea:	99 23       	and	r25, r25
 5ec:	a9 f0       	breq	.+42     	; 0x618 <__floatsisf+0x40>
 5ee:	f9 2f       	mov	r31, r25
 5f0:	96 e9       	ldi	r25, 0x96	; 150
 5f2:	bb 27       	eor	r27, r27
 5f4:	93 95       	inc	r25
 5f6:	f6 95       	lsr	r31
 5f8:	87 95       	ror	r24
 5fa:	77 95       	ror	r23
 5fc:	67 95       	ror	r22
 5fe:	b7 95       	ror	r27
 600:	f1 11       	cpse	r31, r1
 602:	f8 cf       	rjmp	.-16     	; 0x5f4 <__floatsisf+0x1c>
 604:	fa f4       	brpl	.+62     	; 0x644 <__floatsisf+0x6c>
 606:	bb 0f       	add	r27, r27
 608:	11 f4       	brne	.+4      	; 0x60e <__floatsisf+0x36>
 60a:	60 ff       	sbrs	r22, 0
 60c:	1b c0       	rjmp	.+54     	; 0x644 <__floatsisf+0x6c>
 60e:	6f 5f       	subi	r22, 0xFF	; 255
 610:	7f 4f       	sbci	r23, 0xFF	; 255
 612:	8f 4f       	sbci	r24, 0xFF	; 255
 614:	9f 4f       	sbci	r25, 0xFF	; 255
 616:	16 c0       	rjmp	.+44     	; 0x644 <__floatsisf+0x6c>
 618:	88 23       	and	r24, r24
 61a:	11 f0       	breq	.+4      	; 0x620 <__floatsisf+0x48>
 61c:	96 e9       	ldi	r25, 0x96	; 150
 61e:	11 c0       	rjmp	.+34     	; 0x642 <__floatsisf+0x6a>
 620:	77 23       	and	r23, r23
 622:	21 f0       	breq	.+8      	; 0x62c <__floatsisf+0x54>
 624:	9e e8       	ldi	r25, 0x8E	; 142
 626:	87 2f       	mov	r24, r23
 628:	76 2f       	mov	r23, r22
 62a:	05 c0       	rjmp	.+10     	; 0x636 <__floatsisf+0x5e>
 62c:	66 23       	and	r22, r22
 62e:	71 f0       	breq	.+28     	; 0x64c <__floatsisf+0x74>
 630:	96 e8       	ldi	r25, 0x86	; 134
 632:	86 2f       	mov	r24, r22
 634:	70 e0       	ldi	r23, 0x00	; 0
 636:	60 e0       	ldi	r22, 0x00	; 0
 638:	2a f0       	brmi	.+10     	; 0x644 <__floatsisf+0x6c>
 63a:	9a 95       	dec	r25
 63c:	66 0f       	add	r22, r22
 63e:	77 1f       	adc	r23, r23
 640:	88 1f       	adc	r24, r24
 642:	da f7       	brpl	.-10     	; 0x63a <__floatsisf+0x62>
 644:	88 0f       	add	r24, r24
 646:	96 95       	lsr	r25
 648:	87 95       	ror	r24
 64a:	97 f9       	bld	r25, 7
 64c:	08 95       	ret

0000064e <__fp_inf>:
 64e:	97 f9       	bld	r25, 7
 650:	9f 67       	ori	r25, 0x7F	; 127
 652:	80 e8       	ldi	r24, 0x80	; 128
 654:	70 e0       	ldi	r23, 0x00	; 0
 656:	60 e0       	ldi	r22, 0x00	; 0
 658:	08 95       	ret

0000065a <__fp_nan>:
 65a:	9f ef       	ldi	r25, 0xFF	; 255
 65c:	80 ec       	ldi	r24, 0xC0	; 192
 65e:	08 95       	ret

00000660 <__fp_pscA>:
 660:	00 24       	eor	r0, r0
 662:	0a 94       	dec	r0
 664:	16 16       	cp	r1, r22
 666:	17 06       	cpc	r1, r23
 668:	18 06       	cpc	r1, r24
 66a:	09 06       	cpc	r0, r25
 66c:	08 95       	ret

0000066e <__fp_pscB>:
 66e:	00 24       	eor	r0, r0
 670:	0a 94       	dec	r0
 672:	12 16       	cp	r1, r18
 674:	13 06       	cpc	r1, r19
 676:	14 06       	cpc	r1, r20
 678:	05 06       	cpc	r0, r21
 67a:	08 95       	ret

0000067c <__fp_round>:
 67c:	09 2e       	mov	r0, r25
 67e:	03 94       	inc	r0
 680:	00 0c       	add	r0, r0
 682:	11 f4       	brne	.+4      	; 0x688 <__fp_round+0xc>
 684:	88 23       	and	r24, r24
 686:	52 f0       	brmi	.+20     	; 0x69c <__fp_round+0x20>
 688:	bb 0f       	add	r27, r27
 68a:	40 f4       	brcc	.+16     	; 0x69c <__fp_round+0x20>
 68c:	bf 2b       	or	r27, r31
 68e:	11 f4       	brne	.+4      	; 0x694 <__fp_round+0x18>
 690:	60 ff       	sbrs	r22, 0
 692:	04 c0       	rjmp	.+8      	; 0x69c <__fp_round+0x20>
 694:	6f 5f       	subi	r22, 0xFF	; 255
 696:	7f 4f       	sbci	r23, 0xFF	; 255
 698:	8f 4f       	sbci	r24, 0xFF	; 255
 69a:	9f 4f       	sbci	r25, 0xFF	; 255
 69c:	08 95       	ret

0000069e <__fp_split3>:
 69e:	57 fd       	sbrc	r21, 7
 6a0:	90 58       	subi	r25, 0x80	; 128
 6a2:	44 0f       	add	r20, r20
 6a4:	55 1f       	adc	r21, r21
 6a6:	59 f0       	breq	.+22     	; 0x6be <__fp_splitA+0x10>
 6a8:	5f 3f       	cpi	r21, 0xFF	; 255
 6aa:	71 f0       	breq	.+28     	; 0x6c8 <__fp_splitA+0x1a>
 6ac:	47 95       	ror	r20

000006ae <__fp_splitA>:
 6ae:	88 0f       	add	r24, r24
 6b0:	97 fb       	bst	r25, 7
 6b2:	99 1f       	adc	r25, r25
 6b4:	61 f0       	breq	.+24     	; 0x6ce <__fp_splitA+0x20>
 6b6:	9f 3f       	cpi	r25, 0xFF	; 255
 6b8:	79 f0       	breq	.+30     	; 0x6d8 <__fp_splitA+0x2a>
 6ba:	87 95       	ror	r24
 6bc:	08 95       	ret
 6be:	12 16       	cp	r1, r18
 6c0:	13 06       	cpc	r1, r19
 6c2:	14 06       	cpc	r1, r20
 6c4:	55 1f       	adc	r21, r21
 6c6:	f2 cf       	rjmp	.-28     	; 0x6ac <__fp_split3+0xe>
 6c8:	46 95       	lsr	r20
 6ca:	f1 df       	rcall	.-30     	; 0x6ae <__fp_splitA>
 6cc:	08 c0       	rjmp	.+16     	; 0x6de <__fp_splitA+0x30>
 6ce:	16 16       	cp	r1, r22
 6d0:	17 06       	cpc	r1, r23
 6d2:	18 06       	cpc	r1, r24
 6d4:	99 1f       	adc	r25, r25
 6d6:	f1 cf       	rjmp	.-30     	; 0x6ba <__fp_splitA+0xc>
 6d8:	86 95       	lsr	r24
 6da:	71 05       	cpc	r23, r1
 6dc:	61 05       	cpc	r22, r1
 6de:	08 94       	sec
 6e0:	08 95       	ret

000006e2 <__fp_zero>:
 6e2:	e8 94       	clt

000006e4 <__fp_szero>:
 6e4:	bb 27       	eor	r27, r27
 6e6:	66 27       	eor	r22, r22
 6e8:	77 27       	eor	r23, r23
 6ea:	cb 01       	movw	r24, r22
 6ec:	97 f9       	bld	r25, 7
 6ee:	08 95       	ret

000006f0 <__mulsf3>:
 6f0:	0e 94 8b 03 	call	0x716	; 0x716 <__mulsf3x>
 6f4:	0c 94 3e 03 	jmp	0x67c	; 0x67c <__fp_round>
 6f8:	0e 94 30 03 	call	0x660	; 0x660 <__fp_pscA>
 6fc:	38 f0       	brcs	.+14     	; 0x70c <__mulsf3+0x1c>
 6fe:	0e 94 37 03 	call	0x66e	; 0x66e <__fp_pscB>
 702:	20 f0       	brcs	.+8      	; 0x70c <__mulsf3+0x1c>
 704:	95 23       	and	r25, r21
 706:	11 f0       	breq	.+4      	; 0x70c <__mulsf3+0x1c>
 708:	0c 94 27 03 	jmp	0x64e	; 0x64e <__fp_inf>
 70c:	0c 94 2d 03 	jmp	0x65a	; 0x65a <__fp_nan>
 710:	11 24       	eor	r1, r1
 712:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__fp_szero>

00000716 <__mulsf3x>:
 716:	0e 94 4f 03 	call	0x69e	; 0x69e <__fp_split3>
 71a:	70 f3       	brcs	.-36     	; 0x6f8 <__mulsf3+0x8>

0000071c <__mulsf3_pse>:
 71c:	95 9f       	mul	r25, r21
 71e:	c1 f3       	breq	.-16     	; 0x710 <__mulsf3+0x20>
 720:	95 0f       	add	r25, r21
 722:	50 e0       	ldi	r21, 0x00	; 0
 724:	55 1f       	adc	r21, r21
 726:	62 9f       	mul	r22, r18
 728:	f0 01       	movw	r30, r0
 72a:	72 9f       	mul	r23, r18
 72c:	bb 27       	eor	r27, r27
 72e:	f0 0d       	add	r31, r0
 730:	b1 1d       	adc	r27, r1
 732:	63 9f       	mul	r22, r19
 734:	aa 27       	eor	r26, r26
 736:	f0 0d       	add	r31, r0
 738:	b1 1d       	adc	r27, r1
 73a:	aa 1f       	adc	r26, r26
 73c:	64 9f       	mul	r22, r20
 73e:	66 27       	eor	r22, r22
 740:	b0 0d       	add	r27, r0
 742:	a1 1d       	adc	r26, r1
 744:	66 1f       	adc	r22, r22
 746:	82 9f       	mul	r24, r18
 748:	22 27       	eor	r18, r18
 74a:	b0 0d       	add	r27, r0
 74c:	a1 1d       	adc	r26, r1
 74e:	62 1f       	adc	r22, r18
 750:	73 9f       	mul	r23, r19
 752:	b0 0d       	add	r27, r0
 754:	a1 1d       	adc	r26, r1
 756:	62 1f       	adc	r22, r18
 758:	83 9f       	mul	r24, r19
 75a:	a0 0d       	add	r26, r0
 75c:	61 1d       	adc	r22, r1
 75e:	22 1f       	adc	r18, r18
 760:	74 9f       	mul	r23, r20
 762:	33 27       	eor	r19, r19
 764:	a0 0d       	add	r26, r0
 766:	61 1d       	adc	r22, r1
 768:	23 1f       	adc	r18, r19
 76a:	84 9f       	mul	r24, r20
 76c:	60 0d       	add	r22, r0
 76e:	21 1d       	adc	r18, r1
 770:	82 2f       	mov	r24, r18
 772:	76 2f       	mov	r23, r22
 774:	6a 2f       	mov	r22, r26
 776:	11 24       	eor	r1, r1
 778:	9f 57       	subi	r25, 0x7F	; 127
 77a:	50 40       	sbci	r21, 0x00	; 0
 77c:	9a f0       	brmi	.+38     	; 0x7a4 <__mulsf3_pse+0x88>
 77e:	f1 f0       	breq	.+60     	; 0x7bc <__mulsf3_pse+0xa0>
 780:	88 23       	and	r24, r24
 782:	4a f0       	brmi	.+18     	; 0x796 <__mulsf3_pse+0x7a>
 784:	ee 0f       	add	r30, r30
 786:	ff 1f       	adc	r31, r31
 788:	bb 1f       	adc	r27, r27
 78a:	66 1f       	adc	r22, r22
 78c:	77 1f       	adc	r23, r23
 78e:	88 1f       	adc	r24, r24
 790:	91 50       	subi	r25, 0x01	; 1
 792:	50 40       	sbci	r21, 0x00	; 0
 794:	a9 f7       	brne	.-22     	; 0x780 <__mulsf3_pse+0x64>
 796:	9e 3f       	cpi	r25, 0xFE	; 254
 798:	51 05       	cpc	r21, r1
 79a:	80 f0       	brcs	.+32     	; 0x7bc <__mulsf3_pse+0xa0>
 79c:	0c 94 27 03 	jmp	0x64e	; 0x64e <__fp_inf>
 7a0:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__fp_szero>
 7a4:	5f 3f       	cpi	r21, 0xFF	; 255
 7a6:	e4 f3       	brlt	.-8      	; 0x7a0 <__mulsf3_pse+0x84>
 7a8:	98 3e       	cpi	r25, 0xE8	; 232
 7aa:	d4 f3       	brlt	.-12     	; 0x7a0 <__mulsf3_pse+0x84>
 7ac:	86 95       	lsr	r24
 7ae:	77 95       	ror	r23
 7b0:	67 95       	ror	r22
 7b2:	b7 95       	ror	r27
 7b4:	f7 95       	ror	r31
 7b6:	e7 95       	ror	r30
 7b8:	9f 5f       	subi	r25, 0xFF	; 255
 7ba:	c1 f7       	brne	.-16     	; 0x7ac <__mulsf3_pse+0x90>
 7bc:	fe 2b       	or	r31, r30
 7be:	88 0f       	add	r24, r24
 7c0:	91 1d       	adc	r25, r1
 7c2:	96 95       	lsr	r25
 7c4:	87 95       	ror	r24
 7c6:	97 f9       	bld	r25, 7
 7c8:	08 95       	ret

000007ca <_exit>:
 7ca:	f8 94       	cli

000007cc <__stop_program>:
 7cc:	ff cf       	rjmp	.-2      	; 0x7cc <__stop_program>
