
Lab5a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000372  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  000003c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003c6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004577  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003cb0  00000000  00000000  000049ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000683  00000000  00000000  000086af  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  00008d34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002e46  00000000  00000000  00008e28  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001c4  00000000  00000000  0000bc6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  0000be32  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  10:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  14:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  18:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  1c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  20:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  24:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  28:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  2c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  30:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  34:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  38:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  3c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  40:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  44:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  48:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  4c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  50:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  54:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  58:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  5c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  60:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  64:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  68:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  6c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  70:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  74:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  78:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  7c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  80:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  84:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  88:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  8c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  90:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  94:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  98:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  9c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  fc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 100:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 104:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 108:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 10c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 110:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 114:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 118:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 11c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 120:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 124:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 128:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 12c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 130:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 134:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 138:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 13c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 140:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 144:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 148:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 14c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 150:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 154:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 158:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 15c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 160:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 164:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 168:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 16c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 170:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 174:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 178:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 17c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 180:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 184:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 188:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 18c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 190:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 194:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 198:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 19c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	e2 e7       	ldi	r30, 0x72	; 114
 21c:	f3 e0       	ldi	r31, 0x03	; 3
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	a0 30       	cpi	r26, 0x00	; 0
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59
 230:	0e 94 98 01 	call	0x330	; 0x330 <main>
 234:	0c 94 b7 01 	jmp	0x36e	; 0x36e <_exit>

00000238 <__bad_interrupt>:
 238:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000023c <Change_CLK_32HZ>:
; Outputs: No outputs
*/
char IN_CHAR(void){
	while((USARTD0.STATUS & PIN7_bm) == 0);
	return USARTD0_DATA;	
}
 23c:	cf 93       	push	r28
 23e:	df 93       	push	r29
 240:	cd b7       	in	r28, 0x3d	; 61
 242:	de b7       	in	r29, 0x3e	; 62
 244:	80 e5       	ldi	r24, 0x50	; 80
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	22 e0       	ldi	r18, 0x02	; 2
 24a:	fc 01       	movw	r30, r24
 24c:	20 83       	st	Z, r18
 24e:	00 00       	nop
 250:	81 e5       	ldi	r24, 0x51	; 81
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	fc 01       	movw	r30, r24
 256:	80 81       	ld	r24, Z
 258:	88 2f       	mov	r24, r24
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	82 70       	andi	r24, 0x02	; 2
 25e:	99 27       	eor	r25, r25
 260:	89 2b       	or	r24, r25
 262:	b1 f3       	breq	.-20     	; 0x250 <Change_CLK_32HZ+0x14>
 264:	84 e3       	ldi	r24, 0x34	; 52
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	28 ed       	ldi	r18, 0xD8	; 216
 26a:	fc 01       	movw	r30, r24
 26c:	20 83       	st	Z, r18
 26e:	80 e4       	ldi	r24, 0x40	; 64
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	21 e0       	ldi	r18, 0x01	; 1
 274:	fc 01       	movw	r30, r24
 276:	20 83       	st	Z, r18
 278:	00 00       	nop
 27a:	df 91       	pop	r29
 27c:	cf 91       	pop	r28
 27e:	08 95       	ret

00000280 <USART_INIT>:
 280:	cf 93       	push	r28
 282:	df 93       	push	r29
 284:	cd b7       	in	r28, 0x3d	; 61
 286:	de b7       	in	r29, 0x3e	; 62
 288:	80 e6       	ldi	r24, 0x60	; 96
 28a:	96 e0       	ldi	r25, 0x06	; 6
 28c:	28 e0       	ldi	r18, 0x08	; 8
 28e:	fc 01       	movw	r30, r24
 290:	21 83       	std	Z+1, r18	; 0x01
 292:	80 e6       	ldi	r24, 0x60	; 96
 294:	96 e0       	ldi	r25, 0x06	; 6
 296:	28 e0       	ldi	r18, 0x08	; 8
 298:	fc 01       	movw	r30, r24
 29a:	25 83       	std	Z+5, r18	; 0x05
 29c:	80 e6       	ldi	r24, 0x60	; 96
 29e:	96 e0       	ldi	r25, 0x06	; 6
 2a0:	24 e0       	ldi	r18, 0x04	; 4
 2a2:	fc 01       	movw	r30, r24
 2a4:	22 83       	std	Z+2, r18	; 0x02
 2a6:	84 ea       	ldi	r24, 0xA4	; 164
 2a8:	99 e0       	ldi	r25, 0x09	; 9
 2aa:	28 e1       	ldi	r18, 0x18	; 24
 2ac:	fc 01       	movw	r30, r24
 2ae:	20 83       	st	Z, r18
 2b0:	85 ea       	ldi	r24, 0xA5	; 165
 2b2:	99 e0       	ldi	r25, 0x09	; 9
 2b4:	23 e3       	ldi	r18, 0x33	; 51
 2b6:	fc 01       	movw	r30, r24
 2b8:	20 83       	st	Z, r18
 2ba:	80 ea       	ldi	r24, 0xA0	; 160
 2bc:	99 e0       	ldi	r25, 0x09	; 9
 2be:	27 e3       	ldi	r18, 0x37	; 55
 2c0:	fc 01       	movw	r30, r24
 2c2:	26 83       	std	Z+6, r18	; 0x06
 2c4:	80 ea       	ldi	r24, 0xA0	; 160
 2c6:	99 e0       	ldi	r25, 0x09	; 9
 2c8:	30 eb       	ldi	r19, 0xB0	; 176
 2ca:	24 e0       	ldi	r18, 0x04	; 4
 2cc:	23 2b       	or	r18, r19
 2ce:	fc 01       	movw	r30, r24
 2d0:	27 83       	std	Z+7, r18	; 0x07
 2d2:	00 00       	nop
 2d4:	df 91       	pop	r29
 2d6:	cf 91       	pop	r28
 2d8:	08 95       	ret

000002da <EBI_INIT>:
extern const uint8_t ebi_baseaddlH_config;
extern const uint8_t PORTH_CONFIG;
extern const uint8_t PORTK_CONFIG;


void EBI_INIT(void){
 2da:	cf 93       	push	r28
 2dc:	df 93       	push	r29
 2de:	cd b7       	in	r28, 0x3d	; 61
 2e0:	de b7       	in	r29, 0x3e	; 62
	// Set up EBI CTRL
	EBI.CTRL = ebi_ctrl_config;
 2e2:	80 e4       	ldi	r24, 0x40	; 64
 2e4:	94 e0       	ldi	r25, 0x04	; 4
 2e6:	21 e0       	ldi	r18, 0x01	; 1
 2e8:	fc 01       	movw	r30, r24
 2ea:	20 83       	st	Z, r18
	
	//Set up EBI CHIP 0 and base address
	EBI.CS0.CTRLA = ebi_ctrla_config;
 2ec:	80 e4       	ldi	r24, 0x40	; 64
 2ee:	94 e0       	ldi	r25, 0x04	; 4
 2f0:	25 e1       	ldi	r18, 0x15	; 21
 2f2:	fc 01       	movw	r30, r24
 2f4:	20 8b       	std	Z+16, r18	; 0x10
	EBI.CS0.BASEADDRH = ebi_baseaddlH_config;
 2f6:	80 e4       	ldi	r24, 0x40	; 64
 2f8:	94 e0       	ldi	r25, 0x04	; 4
 2fa:	20 e0       	ldi	r18, 0x00	; 0
 2fc:	fc 01       	movw	r30, r24
 2fe:	23 8b       	std	Z+19, r18	; 0x13
	EBI.CS0.BASEADDRL = ebi_baseaddlL_config;
 300:	80 e4       	ldi	r24, 0x40	; 64
 302:	94 e0       	ldi	r25, 0x04	; 4
 304:	20 e8       	ldi	r18, 0x80	; 128
 306:	fc 01       	movw	r30, r24
 308:	22 8b       	std	Z+18, r18	; 0x12

	//Set up PORT H
	PORTH_DIRSET = PORTH_CONFIG;
 30a:	81 ee       	ldi	r24, 0xE1	; 225
 30c:	96 e0       	ldi	r25, 0x06	; 6
 30e:	27 e1       	ldi	r18, 0x17	; 23
 310:	fc 01       	movw	r30, r24
 312:	20 83       	st	Z, r18
	PORTH_OUTSET = PORTH_CONFIG; 
 314:	85 ee       	ldi	r24, 0xE5	; 229
 316:	96 e0       	ldi	r25, 0x06	; 6
 318:	27 e1       	ldi	r18, 0x17	; 23
 31a:	fc 01       	movw	r30, r24
 31c:	20 83       	st	Z, r18
	
	//Set up PORT K
	PORTK_DIRSET = PORTK_CONFIG;
 31e:	81 e2       	ldi	r24, 0x21	; 33
 320:	97 e0       	ldi	r25, 0x07	; 7
 322:	2f ef       	ldi	r18, 0xFF	; 255
 324:	fc 01       	movw	r30, r24
 326:	20 83       	st	Z, r18

}
 328:	00 00       	nop
 32a:	df 91       	pop	r29
 32c:	cf 91       	pop	r28
 32e:	08 95       	ret

00000330 <main>:
#include "Clk_32MHz.h"
#include "USART.h"
#include "EBI.h"


int main(void){
 330:	cf 93       	push	r28
 332:	df 93       	push	r29
 334:	00 d0       	rcall	.+0      	; 0x336 <main+0x6>
 336:	1f 92       	push	r1
 338:	cd b7       	in	r28, 0x3d	; 61
 33a:	de b7       	in	r29, 0x3e	; 62
	
	Change_CLK_32HZ();
 33c:	0e 94 1e 01 	call	0x23c	; 0x23c <Change_CLK_32HZ>
	USART_INIT();
 340:	0e 94 40 01 	call	0x280	; 0x280 <USART_INIT>
	EBI_INIT();
 344:	0e 94 6d 01 	call	0x2da	; 0x2da <EBI_INIT>
	
	//Set up Pointer at address
	uint8_t *ptr1 = 0x8500;
 348:	80 e0       	ldi	r24, 0x00	; 0
 34a:	95 e8       	ldi	r25, 0x85	; 133
 34c:	89 83       	std	Y+1, r24	; 0x01
 34e:	9a 83       	std	Y+2, r25	; 0x02
	uint8_t *ptr2 = 0x8501;
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	95 e8       	ldi	r25, 0x85	; 133
 354:	8b 83       	std	Y+3, r24	; 0x03
 356:	9c 83       	std	Y+4, r25	; 0x04
	
	//Store values at mem location
	while(TRUE){
		*ptr1 = 0x37;
 358:	89 81       	ldd	r24, Y+1	; 0x01
 35a:	9a 81       	ldd	r25, Y+2	; 0x02
 35c:	27 e3       	ldi	r18, 0x37	; 55
 35e:	fc 01       	movw	r30, r24
 360:	20 83       	st	Z, r18
		*ptr2 = 0x73;
 362:	8b 81       	ldd	r24, Y+3	; 0x03
 364:	9c 81       	ldd	r25, Y+4	; 0x04
 366:	23 e7       	ldi	r18, 0x73	; 115
 368:	fc 01       	movw	r30, r24
 36a:	20 83       	st	Z, r18
	}
 36c:	f5 cf       	rjmp	.-22     	; 0x358 <main+0x28>

0000036e <_exit>:
 36e:	f8 94       	cli

00000370 <__stop_program>:
 370:	ff cf       	rjmp	.-2      	; 0x370 <__stop_program>
